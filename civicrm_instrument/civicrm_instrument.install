<?php
/**
 * @file
 * Installation and schema for UC CiviCRM Products module.
 */

/**
 * Implementation of hook_schema().
 */
/* moved to civicrm core
function civicrm_instrument_schema() {
  $schema = array();
  $schema['civicrm_instrument'] = array(
    'fields' => array(
      'entity_id' => array(
        'description' => 'Foregin-key to the referenced item.',
        'type' => 'int',
        'length' => '11',
        'not null' => TRUE,
      ),
      'entity_table' => array(
        'description' => 'Name of table where item being referenced is stored.',
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
      'payment_instruments' => array(
        'description' => 'Allowed instruments from contribution page or event page.',
        'type' => 'blob',
        'length' => '1000',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('entity_id', 'entity_table'),
    'mysql_suffix' => 'ENGINE = InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci',
  );
  return $schema;
}
*/

/**
 * Implementation of hook_install().
 */
function civicrm_instrument_install() {
  // Create tables.
  // drupal_install_schema('civicrm_instrument');

  // Save variables
  civicrm_initialize( );
  require_once "CRM/Core/DAO.php";
  $gid = CRM_Core_DAO::singleValueQuery("SELECT id FROM civicrm_option_group WHERE name LIKE 'payment_instrument'");
  variable_set('civicrm_instrument_gid', $gid);

  // Setup definition of instrument
  require_once('CRM/Core/OptionGroup.php');
  require_once('CRM/Core/OptionValue.php');
  require_once('CRM/Core/Action.php');
  // Add contribution instruments
  $definition = array(
    'Credit Card (Offline)' => '信用卡（非線上）',
    'Credit Card Recurring (Offline)' => '信用卡定期定額（非線上）',
    'Post Office Transfer' => '郵政劃撥',
    'Convenient Store' => '超商條碼繳費',
    'Convenient Store (Code)' => '超商代碼繳費',
    'Web ATM' => 'Web ATM',
    'ATM' => 'ATM 轉帳',
    'Yahoo' => 'Yahoo公益',
    'UnionPay' => '銀聯卡',
    'ApplePay' => 'Apple Pay',
    'GooglePay' => 'Google Pay',
    'LinePay' => 'LINE Pay',
    'ACH Bank' => 'ACH 銀行',
    'ACH Post' => 'ACH 郵局',
  );

  $values = array();
  $values = CRM_Core_OptionGroup::values('payment_instrument', TRUE);
  $group_params = array('name' => 'payment_instrument');
  $params = array(
    'is_active' => 1,
  );
  foreach($definition as $name => $label){
    $params = array();
    $params['label'] = $label;
    $params['name'] = $name;
    $params['is_active'] = 1;
    if (substr($name, 0, 3) == 'ACH') {
      $params['weight'] = CRM_Core_DAO::singleValueQuery("SELECT MAX(weight) FROM civicrm_option_value WHERE option_group_id = %1", array(1 => array($gid, 'Positive'))) + 1;
    }
    if($values[$label]){
      // skipped, won't update.
    }
    else{
      $action = CRM_Core_Action::ADD;
      $option_value_id = 0;
      if ($params['name'] == 'Web ATM') {
        $params['is_active'] = 0;
      }
      CRM_Core_OptionValue::addOptionValue($params, $group_params, $action, $option_value_id);
    }
  }
  $query = "UPDATE civicrm_payment_processor_type SET is_active = 0 WHERE name NOT IN ('GW', 'Neweb', 'Mobile', 'TapPay', 'TaiwanACH')";
  CRM_Core_DAO::executeQuery($query);

  $query = "UPDATE civicrm_option_value SET is_reserved = 1 WHERE name IN ('ApplePay', 'GooglePay', 'LinePay', 'TapPay', 'ACH Bank', 'ACH Post') AND option_group_id = {$gid}";
  CRM_Core_DAO::executeQuery($query);
}

/**
 * Implementation of hook_uninstall().
 */
function civicrm_instrument_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('civicrm_instrument');

  // Remove variable;
  variable_del('civicrm_instrument_gid');
}


/* update */
function civicrm_instrument_update_6001(){
  civicrm_initialize( );

  $query = "UPDATE civicrm_payment_processor_type SET is_active = 0 WHERE name != 'GW' AND name != 'Neweb'";
  CRM_Core_DAO::executeQuery($query);

  return array('success' => 'Successful update. ', 'query' => check_plain($query));
}

function civicrm_instrument_update_6002(){
  civicrm_initialize( );
  require_once "CRM/Core/DAO.php";
  $gid = CRM_Core_DAO::singleValueQuery("SELECT id FROM civicrm_option_group WHERE name LIKE 'payment_instrument'");

  // Setup definition of instrument
  require_once('CRM/Core/OptionGroup.php');
  require_once('CRM/Core/OptionValue.php');
  require_once('CRM/Core/Action.php');
  // Add contribution instruments
  $definition = array(
    'UnionPay' => '銀聯卡',
  );

  $values = array();
  $values = CRM_Core_OptionGroup::values('payment_instrument', TRUE);
  $group_params = array('name' => 'payment_instrument');
  $params = array(
    'is_active' => 1,
  );
  foreach($definition as $name => $label){
    $params = array();
    $params['label'] = $label;
    $params['name'] = $name;
    $params['is_active'] = 1;
    if($values[$label]){
      // skipped, won't update.
    }
    else{
      $action = CRM_Core_Action::ADD;
      $option_value_id = 0;
      CRM_Core_OptionValue::addOptionValue($params, $group_params, $action, $option_value_id);
    }
  }
  return array('success' => 'Successful added UnionPay payment method', 'query' => 'none');
}

function civicrm_instrument_update_6003(){
  civicrm_initialize();
  
  $payment_instrument = CRM_Core_OptionGroup::values('payment_instrument', TRUE);
  $payment_instrument = array_keys($payment_instrument);

  $definition = array(
    'ApplePay' => 'Apple Pay',
    'GooglePay' => 'Google Pay',
  );

  $values = array();
  $group_params = array('name' => 'payment_instrument');
  $params = array(
    'is_active' => 1,
  );
  foreach($definition as $name => $label){
    if(!in_array($label, $payment_instrument)){
      $params = array();
      $params['label'] = $label;
      $params['name'] = $name;
      $params['is_active'] = 1;
      $params['is_reserved'] = 1;
      if($values[$label]){
        // skipped, won't update.
      }
      else{
        $action = CRM_Core_Action::ADD;
        $option_value_id = 0;
        CRM_Core_OptionValue::addOptionValue($params, $group_params, $action, $option_value_id);
      }
    }
  }
}

/**
 * Add linepay instrument. Refs #23639.
 */
function civicrm_instrument_update_7004(){
  civicrm_initialize();
  $payment_instrument = CRM_Core_OptionGroup::values('payment_instrument', TRUE);
  $payment_instrument = array_keys($payment_instrument);

  $group_params = array('name' => 'payment_instrument');
  $params = array();
  $name = 'LinePay';
  $label = 'LINE Pay';
  if(!in_array($label, $payment_instrument)){
    $params = array();
    $params['label'] = 'LINE Pay';
    $params['name'] = 'LinePay';
    $params['is_active'] = 1;
    $params['is_reserved'] = 1;
    $action = CRM_Core_Action::ADD;
    $option_value_id = 0;
    CRM_Core_OptionValue::addOptionValue($params, $group_params, $action, $option_value_id);
  }
}

/**
 * Correct Payment Instrument refs #23862
 */
function civicrm_instrument_update_7105() {
  civicrm_initialize();
  CRM_Core_DAO::executeQuery("UPDATE civicrm_option_value SET label = 'LINE Pay' WHERE label LIKE 'Line Pay'");
}

/**
 * Add ACH Instruments. refs #27673
 */
function civicrm_instrument_update_7106() {
  civicrm_initialize();

  $payment_instrument = CRM_Core_OptionGroup::values('payment_instrument', TRUE);
  $payment_instrument = array_keys($payment_instrument);
  $gid = CRM_Core_DAO::singleValueQuery("SELECT id FROM civicrm_option_group WHERE name LIKE 'payment_instrument'");

  $definition = array(
    'ACH Bank' => 'ACH 銀行',
    'ACH Post' => 'ACH 郵局',
  );

  $group_params = array('name' => 'payment_instrument');
  foreach($definition as $name => $label){
    if(!in_array($label, $payment_instrument)){
      $params = array();
      $params['label'] = $label;
      $params['name'] = $name;
      $params['is_active'] = 1;
      $params['is_reserved'] = 1;
      $params['weight'] = CRM_Core_DAO::singleValueQuery("SELECT MAX(weight) FROM civicrm_option_value WHERE option_group_id = %1", array(1 => array($gid, 'Positive'))) + 1;
      $action = CRM_Core_Action::ADD;
      $option_value_id = 0;
      CRM_Core_OptionValue::addOptionValue($params, $group_params, $action, $option_value_id);
    }
  }
}
