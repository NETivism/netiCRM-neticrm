<?php
/**
 * Implementation of hook_civicrm_buildForm()
 */
function civicrm_instrument_civicrm_buildForm($form_name, &$form){
  switch($form_name){
    // contribution page settings
    case 'CRM_Contribute_Form_ContributionPage_Amount':
    case 'CRM_Event_Form_ManageEvent_Fee':
      $entity_id = $_GET['id'] ? $_GET['id'] : ($form->_defaultValues['id'] ? $form->_defaultValues['id'] : NULL);
      if($entity_id){
        $entity_table = $form_name == 'CRM_Contribute_Form_ContributionPage_Amount' ? 'civicrm_contribution_page' : 'civicrm_event';

        $payment_instruments = CRM_Core_DAO::singleValueQuery("SELECT payment_instruments FROM civicrm_instrument WHERE entity_id = {$entity_id} AND entity_table = '{$entity_table}'");
        $payment_instruments = unserialize($payment_instruments);

        $gid = variable_get('civicrm_instrument_gid', 0);
        $option = CRM_Core_DAO::executeQuery("SELECT * FROM civicrm_option_value WHERE option_group_id = {$gid} AND is_active = 1 AND is_reserved = 1 ORDER BY weight ASC");
        while($option->fetch()){
          $checkbox_name = _civicrm_instrument_form_name($option->name);
          $label = $option->is_reserved ? $option->label." [".ts('Payment Processor')."]*" : $option->label;
          $options[$checkbox_name] = array(
            'default' => $payment_instruments[$checkbox_name] ? 1: 0,
            'label' => $label,
            'reserved' => $option->is_reserved ? 1 : 0,
          );
        }
        drupal_add_js(_civicrm_instrument_js_admin($options, $entity_table), 'inline');
      }
      break;
    case 'CRM_Contribute_Form_Contribution_Main':
    case 'CRM_Event_Form_Registration_Register':
      // check the payment limitation.
      $entity_id = $form->getVar('_id') ? $form->getVar('_id') : $form->getVar('_eventId');
      if($form_name == 'CRM_Contribute_Form_Contribution_Main'){
        $entity_table = 'civicrm_contribution_page';
        $info =& $form->_values;
      }
      else{
        $entity_table = 'civicrm_event';
        $info =& $form->_values['event'];
      }
      $query_params = array(
        1 => array($entity_id, 'Integer'),
        2 => array($entity_table,'String'),
      );
      $gid = variable_get('civicrm_instrument_gid', 0);
      $query = CRM_Core_DAO::executeQuery("SELECT payment_instruments FROM civicrm_instrument WHERE entity_id = %1 AND entity_table = %2", $query_params);
      $query->fetch();
      $active_instruments = unserialize($query->payment_instruments);
      if(empty($active_instruments)){
        $active_instruments = array();
      }
      $all_instruments = array();
      $dao = CRM_Core_DAO::executeQuery("SELECT * FROM civicrm_option_value WHERE option_group_id = {$gid} AND is_active = 1 ORDER BY weight ASC");
      while($dao->fetch()){
        $all_instruments[$dao->name] = array(
          'label' => $dao->label,
          'description' => $dao->description,
          'value' => $dao->value,
          'id' => $dao->id,
        );
      }
      // is multiple payment processor?
      if($info['is_pay_later'] || !is_numeric($info['payment_processor'])){
        $is_multiple = TRUE;
      }
      else{
        $is_multiple = FALSE; 
      }

      $type = CRM_Utils_Array::value('type', $_GET);
      $snippet = CRM_Utils_Array::value('snippet', $_GET);

      // check if this page is multiple payment processor
      if(!empty($type) && $snippet == 4 && $is_multiple){
        print civicrm_instrument_attach_processor($form, $all_instruments, $active_instruments, FALSE);
        return;
      }
      else{
        if($is_multiple) {
          if(!empty($form->_submitValues['civicrm_instrument_id'])){
            $default = 'cj("input[name=civicrm_instrument_id_dummy][value='.$form->_submitValues['civicrm_instrument_id'].']").click();';
          }
          else{
            $default = '
              setTimeout(function(){
              if(cj("input[name=civicrm_instrument_id_dummy]").length == 1){
                cj("input[name=civicrm_instrument_id_dummy]").click();
              }}, 300);
            ';
          }
          $js = '
          cj(document).ready(function(){
            cj("input[name=payment_processor]").live("click", function(){
              cj("input[name=civicrm_instrument_id_dummy]:eq(0)").click();
            });
            cj("input[name=civicrm_instrument_id_dummy]").live("click", function(){
              cj("input[name=civicrm_instrument_id]").val(cj(this).val());
            });
            '.$default.'
          });
';
          drupal_add_js($js, 'inline');
        }
        elseif(!empty($form->_paymentProcessor)){
          // single processor
          if(count($active_instruments) > 1){
            civicrm_instrument_attach_processor($form, $all_instruments, $active_instruments);
          }
        }
        $form->addElement('hidden', 'civicrm_instrument_id', reset($active_instruments));
      }
      break;
  }
}

/**
 * Implementation of hook_civicrm_validate()
 */
function civicrm_instrument_civicrm_validate($form_name, &$fields, &$files, &$form){
  switch($form_name){
    case 'CRM_Contribute_Form_Contribution_Main':
    case 'CRM_Event_Form_Registration_Register':
      if($fields['payment_processor'] !== '0'){
        if( empty($fields['civicrm_instrument_id']) && isset($fields['civicrm_instrument_id_dummy'])){
          return array(
            'civicrm_instrument_id_dummy' => ts('This field is required.'),
            'payment_processor' => ts('This field is required.'),
          );
        }
      }
      break;
  }
}

/**
 * Implementation of hook_civicrm_postProcess()
 */
function civicrm_instrument_civicrm_postProcess($form_name, &$form){
  switch($form_name){
    // contribution page settings
    case 'CRM_Contribute_Form_ContributionPage_Amount':
    case 'CRM_Event_Form_ManageEvent_Fee':
      $entity_table = strstr($form_name, 'Contribute') ? 'civicrm_contribution_page' : 'civicrm_event';
      $entity_id = $form->getVar('_id');
      if($entity_id){
        if( !empty($form->_submitValues['payment_instrument'])){
          $payment_instrument = $form->_submitValues['payment_instrument'];
          $qvar = array(1 => array(serialize($payment_instrument) ,'String'));
          CRM_Core_DAO::executeQuery("REPLACE INTO civicrm_instrument SET entity_id = {$entity_id}, entity_table='{$entity_table}', payment_instruments=%1", $qvar);
        }
        else{
          // empty
          CRM_Core_DAO::executeQuery("REPLACE INTO civicrm_instrument SET entity_id = {$entity_id}, entity_table='{$entity_table}', payment_instruments=''");
        }
      }
      break;
    // save instrument
    case 'CRM_Event_Form_Registration_Register':
      break;
    case 'CRM_Contribute_Form_Contribution_Confirm':
      $cid = $form->_values['contribution_id'];
      $iid = $form->_params['civicrm_instrument_id'];
      if($cid && $iid){
        CRM_Core_DAO::executeQuery("UPDATE civicrm_contribution SET payment_instrument_id = {$iid} WHERE id = {$cid}");
      }
      break;
  }
}

/**
 * Payment instrument admin javascript
 *
 * Provide payment instrument optoins for contribution and 
 * event page administration.
 */ 
function _civicrm_instrument_js_admin($options, $entity_table){
  switch($entity_table){
    case 'civicrm_contribution_page':
      $css_id = 'amountFields';
      break;
    case 'civicrm_event':
      $css_id = 'map-field';
      break;
  }
  $o = "<table class='form-layout-compressed payment-instrument-block'><tbody><tr>";
  $o .= "<th scope='row' class='label' width='20%'><label for='payment_instrument'>".ts('Payment Instrument').'</label></th>';
  $o .= "<td><div class='content'>";
  foreach($options as $k => $v){
    $checked = $v['default'] ? 'checked=checked' : '';
    $reserved = $v['reserved'] ? ' reserved' : '';
    $o .= "<div class='instrument-wrapper{$reserved}'><label><input type='checkbox' name='payment_instrument[{$k}]' value='1' class='form-checkbox' $checked />".$v['label']."</label></div>";
  }
  $o .= '</div></td>';
  $o .= '</tr></tbody></table>';
  return '
  $(document).ready(function(){
    $("#crm-container #'.$css_id.'").before("'.$o.'");
  });';
}
/**
 * Javascript generate helper function for page
 */
function _civicrm_instrument_js_page($radios, &$form){
  if($_POST['qfKey'] && count($radios) > 1 && !$_POST['civicrm_instrument_id']){
    $error = TRUE;
    $error_str = "<span class='crm-error'>".ts('%1 is a required field.', array( 1 => ts("Payment Instrument")))."</span>";
  }
  $output = "<div class='crm-section'>";
  $output .= "<div class='label'>";
  $error ? $output .= "<span class='crm-error crm-error-label'>" : NULL;
  $output .= ts('Payment Instrument');
  $output .= "<span class='crm-marker' title='此欄位不可空白。'>*</span>";
  $error ? $output .= "</span>" : NULL;
  $output .= "</div>";

  $output .= "<div class='content'>";
  $key = '_'.$form->controller->_name.'_container';
  $submitted_instrument_id = $_POST['civicrm_instrument_id'] ? $_POST['civicrm_instrument_id'] : $_SESSION[$key]['values']['Main']['civicrm_instrument_id'] ? $_SESSION[$key]['values']['Main']['civicrm_instrument_id'] : $_SESSION[$key]['values']['Register']['civicrm_instrument_id'];

  foreach($radios as $value => $radio){
    $c++;
    if($c != 1){
      $error_str = '';
    }
    $checked = $value == $submitted_instrument_id ? "checked='checked'" : '';
    $radio['description'] = str_replace(array("\n","\r"), array('',''), $radio['description']);
    $output .= "<div class='civicrm-instrument-dummy'><label><input type='radio' name='civicrm_instrument_id_dummy' value='".$value."' class='form-radio required' $checked />".$radio['label']."</label>$error_str<div class='hover-item'>".$radio['description']."</div></div>";
  }
  $output .= '</div>';
  $output .= "<div class='clear'></div>";
  $output .= '</div>';
  return '
$(document).ready(function(){
  $("#crm-container form[name=Main] #intro_text").after("'.$output.'");
  $("#crm-container form[name=Register] #priceset").after("'.$output.'");

  $("input[name=civicrm_instrument_id_dummy]").click(function(){
    $("input[name=civicrm_instrument_id]").val($(this).val());
  });
});  
  ';
}
/**
 * Helper function to generate correct instrument form name
 */
function _civicrm_instrument_form_name($name){
  return preg_replace('/[^0-9a-z]+/i', '_', strtolower($name));
}

function civicrm_instrument_by_id($id, $field = NULL){
  $gid = variable_get('civicrm_instrument_gid', 0);
  if(!$field){
    $query = CRM_Core_DAO::exetuteQuery("SELECT * FROM civicrm_option_value WHERE id = {$id} AND option_group_id = {$gid}");
    return $query->fetch();
  }
  else{
    return CRM_Core_DAO::singleValueQuery("SELECT $field FROM civicrm_option_value WHERE value = '{$id}' AND option_group_id = {$gid}");
  }
}

function civicrm_instrument_by_name($name, $field = NULL){
  $gid = variable_get('civicrm_instrument_gid', 0);
  if(!$field){
    $query = CRM_Core_DAO::exetuteQuery("SELECT * FROM civicrm_option_value WHERE name = '{$name}' AND option_group_id = {$gid}");
    return $query->fetch();
  }
  else{
    return CRM_Core_DAO::singleValueQuery("SELECT $field FROM civicrm_option_value WHERE name = '{$name}' AND option_group_id = {$gid}");
  }
}

function civicrm_instrument_attach_processor($form, &$all_instruments, &$active_instruments, $js = TRUE){
  if(module_exists('civicrm_gw') && $form->_paymentProcessor['payment_processor_type'] == 'GW'){
    $enabled_instruments = _civicrm_gw_instrument();
    $enabled_instruments = array_intersect_key($all_instruments, $enabled_instruments);
  
    foreach($enabled_instruments as $name => $i){
      $radio_name = _civicrm_instrument_form_name($name);
      if($active_instruments[$radio_name]){
        $radios[$i['value']] = array(
          'form_name'=> $radio_name,
          'name'=> $name, 
          'label' => $i['label'],
          'description' => $i['description'],
        );
      }
    }
  }
  elseif(module_exists('civicrm_neweb') && $form->_paymentProcessor['payment_processor_type'] == 'Neweb'){
    $enabled_instruments = _civicrm_neweb_instrument();
    $enabled_instruments = array_intersect_key($all_instruments, $enabled_instruments);

    foreach($enabled_instruments as $name => $i){
      $radio_name = _civicrm_instrument_form_name($name);
      if($active_instruments[$radio_name]){
        $radios[$i['value']] = array(
          'form_name'=> $radio_name,
          'name'=> $name, 
          'label' => $i['label'],
          'description' => $i['description'],
        );
      }
    }
  }
  elseif(module_exists('civicrm_allpay') && strstr($form->_paymentProcessor['payment_processor_type'], 'ALLPAY')){
    $enabled_instruments = _civicrm_allpay_instrument();
    $enabled_instruments = array_intersect_key($all_instruments, $enabled_instruments);
    if($form->_paymentProcessor['payment_processor_type'] == 'ALLPAY'){
      $credit_card = $enabled_instruments['Credit Card'];
      $enabled_instruments = array(
        'Credit Card' => $credit_card,
      );
      if($_GET['id']){
        $_POST['civicrm_instrument_id'] = $credit_card['value'];
      }
    }
    else{
      unset($enabled_instruments['Credit Card']);
    }
    foreach($enabled_instruments as $name => $i){
      $radio_name = _civicrm_instrument_form_name($name);
      if($active_instruments[$radio_name]){
        $radios[$i['value']] = array(
          'form_name'=> $radio_name,
          'name'=> $name, 
          'label' => $i['label'],
          'description' => $i['description'],
        );
      }
    }
  }

  // we have real active instruments in radios array
  if(!empty($radios)){
    if(count($radios) && $js){
      // attach by js
      drupal_add_js(_civicrm_instrument_js_page($radios, $form), 'inline');
    }
    else{
      // attach by html
      if(count($radios) == 1){
          $rid = key($radios);
          $r = reset($radios);
          $output = '<div class="civicrm-instrument-dummy"><label><input type="radio" name="civicrm_instrument_id_dummy" value="'.$rid.'" checked="checked" class="form-radio required">'.$r['label'].'</label><div class="hover-item">'.$r['description'].'</div></div>'."\n";
      }
      else{
        foreach($radios as $rid => $r){
          $output .= '<div class="civicrm-instrument-dummy"><label><input type="radio" name="civicrm_instrument_id_dummy" value="'.$rid.'" class="form-radio required">'.$r['label'].'</label><div class="hover-item">'.$r['description'].'</div></div>'."\n";
        }
      }
      $output = '
      <div class="crm-section">
        <div class="label">此付款方式可選擇的工具<span class="crm-marker" title="此欄位不可空白。">*</span></div>
        <div class="content">
          '.$output.'
        </div>
        <div class="clear"></div>
      </div>
      ';
      return $output;
    }
  }
}
