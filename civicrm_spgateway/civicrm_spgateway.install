<?php
define('SPGATEWAY_REAL_DOMAIN', 'https://core.spgateway.com');
define('SPGATEWAY_TEST_DOMAIN', 'https://ccore.spgateway.com');
define('SPGATEWAY_URL_SITE', '/MPG/mpg_gateway');
define('SPGATEWAY_URL_API', '/API/QueryTradeInfo');
define('SPGATEWAY_URL_RECUR', '/API/PeriodAPI');

// $Id: devel.install,v 1.24.2.7 2009/07/30 19:38:48 weitzman Exp $
/**
 * @file
 *   Install file for civicrm_spgateway module.
 */

/**
 * Implementation of hook_schema()
 */
function civicrm_spgateway_schema(){
  $schema['civicrm_contribution_spgateway'] = array(
    'fields' => array(
      'cid' => array(
        'description' => 'Contribution id for civicrm',
        'type' => 'int',
        'length' => '11',
        'not null' => TRUE,
      ),
      'data' => array(
        'description' => 'Whole response object from spgateway.',
        'type' => 'blob',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('cid'),
    'mysql_suffix' => 'ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci',
  );
  return $schema;
}
 
/**
 * Implementation of hook_install()
 */
function civicrm_spgateway_install() {
  civicrm_initialize( );

  // new payment processor - credit card (allowed recurring)
  $sql = "INSERT IGNORE INTO civicrm_payment_processor_type (name, title, description, is_active, is_default, user_name_label, password_label, signature_label, subject_label, class_name, url_site_default, url_api_default, url_recur_default, url_button_default, url_site_test_default, url_api_test_default, url_recur_test_default, url_button_test_default, billing_mode, is_recur, payment_type) VALUES ('SPGATEWAY', '智付通信用卡', NULL, 1, 0, '商店代號', 'HashKey', 'HashIV', '', 'Payment_SPGATEWAY', '".SPGATEWAY_REAL_DOMAIN . SPGATEWAY_URL_SITE."', '".SPGATEWAY_REAL_DOMAIN . SPGATEWAY_URL_API."', '".SPGATEWAY_REAL_DOMAIN . SPGATEWAY_URL_RECUR."', NULL, '".SPGATEWAY_TEST_DOMAIN . SPGATEWAY_URL_SITE."', '".SPGATEWAY_TEST_DOMAIN . SPGATEWAY_URL_API."', '".SPGATEWAY_TEST_DOMAIN . SPGATEWAY_URL_RECUR."', NULL, 4, 1, 1)";
  CRM_Core_DAO::executeQuery($sql);

  // new payment processor - others (not allowed recurring)
  $sql = "INSERT IGNORE INTO civicrm_payment_processor_type (name, title, description, is_active, is_default, user_name_label, password_label, signature_label, subject_label, class_name, url_site_default, url_api_default, url_recur_default, url_button_default, url_site_test_default, url_api_test_default, url_recur_test_default, url_button_test_default, billing_mode, is_recur, payment_type) VALUES ('SPGATEWAYX', '智付通非信用卡', NULL, 1, 0, '商店代號', 'HashKey', 'HashIV', '', 'Payment_SPGATEWAY', '".SPGATEWAY_REAL_DOMAIN . SPGATEWAY_URL_SITE."', '".SPGATEWAY_REAL_DOMAIN . SPGATEWAY_URL_API."', NULL, NULL, '".SPGATEWAY_TEST_DOMAIN . SPGATEWAY_URL_SITE."', '".SPGATEWAY_TEST_DOMAIN . SPGATEWAY_URL_API."', NULL, NULL, 4, 0, 1)";
  CRM_Core_DAO::executeQuery($sql);

  // new payment instrument
  include_once "civicrm_spgateway.module";
  $new_instrument = _civicrm_spgateway_instrument();
  $gid = CRM_Core_DAO::singleValueQuery("SELECT id FROM civicrm_option_group WHERE name LIKE 'payment_instrument'");
  $next = CRM_Core_DAO::singleValueQuery("SELECT value FROM civicrm_option_value WHERE option_group_id = {$gid} ORDER BY value DESC");
  
  $group_params = array('name' => 'payment_instrument');
  foreach($new_instrument as $k => $v){
    $params = array(
      'name' => $k,
      'label' => $v['label'],
      'is_active' => 1,
      'is_reserved' => 1,
    );
    $dao = CRM_Core_DAO::executeQuery("SELECT id, value FROM civicrm_option_value WHERE option_group_id = {$gid} AND name = '$k'");
    $dao->fetch();
    if($dao->id){
      $params['value'] = $dao->value;
      $action = CRM_Core_Action::UPDATE;
      $option_value_id = $dao->id;
    }
    else{
      $action = CRM_Core_Action::ADD;
      $option_value_id = 0;
    }
    CRM_Core_DAO::executeQuery("UPDATE civicrm_option_value SET is_active = 0 WHERE name = 'Convenient Store (FamilyMart)' OR name = 'Convenient Store (7-11 ibon)' OR name = 'UnionPay'");
    CRM_Core_OptionValue::addOptionValue($params, $group_params, $action, $option_value_id);
  }
}

/**
 * Implementation of hook_uninstall().
 */
function civicrm_spgateway_uninstall() {
  civicrm_initialize();
  require_once "CRM/Core/DAO.php";
  CRM_Core_DAO::executeQuery("DELETE FROM civicrm_payment_processor_type WHERE name LIKE 'SPGATEWAY%'");
  CRM_Core_DAO::executeQuery("DELETE FROM civicrm_payment_processor WHERE payment_processor_type LIKE 'SPGATEWAY%'");
  CRM_Core_DAO::executeQuery("OPTIMIZE TABLE civicrm_payment_processor_type");

  // we won't delete instrument for preserve contribution record

}

/**
 * Implementation of hook_enable().
 */
function civicrm_spgateway_enable() {
  civicrm_initialize();
  require_once "CRM/Core/DAO.php";
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor_type SET is_active = 1 WHERE name LIKE 'SPGATEWAY%'");
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor SET is_active = 1 WHERE payment_processor_type LIKE 'SPGATEWAY%'");
}

/**
 * Implementation of hook_disable().
 */
function civicrm_spgateway_disable() {
  civicrm_initialize();
  require_once "CRM/Core/DAO.php";
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor_type SET is_active = 0 WHERE name LIKE 'SPGATEWAY%'");
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor SET is_active = 0 WHERE payment_processor_type LIKE 'SPGATEWAY%'");
}

/**
 * Implementation of hook_update
 */
function civicrm_spgateway_update_7101(){
  civicrm_initialize();

  // update payment processor api url
  $result = CRM_Core_DAO::executeQuery("SELECT id, is_test FROM civicrm_payment_processor WHERE payment_processor_type LIKE 'SPGATEWAY%'");
  while($result->fetch()){
    $base = $result->is_test ? SPGATEWAY_TEST_DOMAIN : SPGATEWAY_REAL_DOMAIN;
    $update = array(
      1 => array($base.SPGATEWAY_URL_SITE,'String'),
      2 => array($base.SPGATEWAY_URL_API,'String'),
      3 => array($base.SPGATEWAY_URL_RECUR,'String'),
      9 => array($result->id, 'Integer')
    );
    CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor SET url_site = %1, url_api = %2, url_recur = %3 WHERE id = %9", $update);
  }

  // update recur status
  CRM_Core_DAO::executeQuery("UPDATE civicrm_contribution_recur SET contribution_status_id = 5 WHERE contribution_status_id = 1"); // processing 
  CRM_Core_DAO::executeQuery("UPDATE civicrm_contribution_recur SET contribution_status_id = 1 WHERE contribution_status_id = 3"); // completed

  // update translations
  if(module_exists('neticrm_update')){
    module_load_include('inc', 'neticrm_update', 'neticrm_update.lib');
    $files = neticrm_update_find_po_files(drupal_get_path('module', 'civicrm_spgateway').'/translations/');
    foreach($files as $f){
      $filename = basename($f);
      $langcode = substr($filename, 0, strpos($filename, '.'));
      neticrm_update_import_po($f, $langcode);
    }
  }
  return 'Spgateway successful updated.';
}
