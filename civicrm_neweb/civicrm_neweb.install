<?php
// $Id: devel.install,v 1.24.2.7 2009/07/30 19:38:48 weitzman Exp $
/**
 * @file
 *   Install file for civicrm_neweb module.
 */

/**
 * Implementation of hook_schema()
 */
function civicrm_neweb_schema(){
  $schema['civicrm_contribution_neweb'] = array(
    'name' => 'civicrm_contribution_neweb',
    'fields' => array(
      'cid' => array(
        'description' => 'The id of civicrm_contribution.',
        'type' => 'int',
        'length' => '11',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'Submit time for user confirmed transaction.',
        'type' => 'int',
        'length' => '11',
        'not null' => FALSE,
      ),
      'prc' => array(
        'description' => 'Primary code returned from credit card transaction.',
        'type' => 'int',
        'length' => '11',
        'not null' => FALSE,
      ),
      'src' => array(
        'description' => 'Secondary code returned from neweb credit card transaction.',
        'type' => 'int',
        'length' => '11',
        'not null' => FALSE,
      ),
      'bankrc' => array(
        'description' => t('Bank code returned from neweb credit card transaction.'),
        'type' => 'varchar',
        'length' => '4',
        'not null' => FALSE,
      ),
      'approvalcode' => array(
        'description' => t('Approval code returned from neweb credit card transaction.'),
        'type' => 'varchar',
        'length' => '6',
        'not null' => FALSE,
      ),
      'data' => array(
        'description' => 'Whole response object from neweb.',
        'type' => 'blob',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('cid'),
    'mysql_suffix' => 'ENGINE = InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci',
  );

  $schema['civicrm_contribution_neweb_recur'] = array(
    'name' => 'civicrm_contribution_neweb_recur',
    'fields' => array(
      'recur_id' => array(
        'description' => 'Recurrent ID of civicrm_contribution_recur',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'order_num' => array(
        'description' => 'Order number of contribution trxn_id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'cycle' => array(
        'description' => 'Cycle count of recurrent contribution',
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'upload' => array(
        'description' => 'Upload timestamp flag.',
        'type' => 'int',
        'default' => 0,
        'unsigned' => TRUE,
      ),
      'response' => array(
        'description' => 'Response timestamp flag.',
        'type' => 'int',
        'default' => 0,
        'unsigned' => TRUE,
      ),
      'contributions' => array(
        'description' => 'Contributions timestamp flag.',
        'type' => 'int',
        'default' => 0,
        'unsigned' => TRUE,
      ),
    ),
    'primary key' => array('recur_id'),
    'key' => array('order_num'),
    'mysql_suffix' => 'ENGINE = InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci',
  );
  return $schema;
}

 
/**
 * Implementation of hook_install()
 */
function civicrm_neweb_install() {
  // drupal_install_schema('civicrm_neweb');
  civicrm_initialize( );
  require_once "CRM/Core/DAO.php";
  require_once('CRM/Core/OptionValue.php');
  require_once('CRM/Core/Action.php');

  // new payment processor
  $sql = "INSERT INTO civicrm_payment_processor_type (name, title, description, is_active, is_default, user_name_label, password_label, signature_label, subject_label, class_name, url_site_default, url_api_default, url_recur_default, url_button_default, url_site_test_default, url_api_test_default, url_recur_test_default, url_button_test_default, billing_mode, is_recur, payment_type) VALUES ('Neweb', '藍新', NULL, 1, 0, '商店編號 (Credit Card)', '商店編號 (EzPay)', 'R_Code (Credit Card)', '交易密碼 (EzPay)', 'Payment_Neweb', 'https://mpp.neweb.com.tw/NewebmPP/cdcard.jsp', 'http://aquarius.neweb.com.tw/CashSystemFrontEnd/', '', '', 'https://maple2.neweb.com.tw/NewebmPP/cdcard.jsp', 'http://maple2.neweb.com.tw/CashSystemFrontEnd/', '', '', 4, 1, 1)";
  CRM_Core_DAO::executeQuery($sql);
  $dao = CRM_Core_DAO::executeQuery("SELECT id FROM civicrm_payment_processor_type WHERE name LIKE 'Neweb'");
  $dao->fetch();
  $ppt_id = $dao->id;

  // new payment instrument
  include_once "civicrm_neweb.module";
  $new_instrument = _civicrm_neweb_instrument();
  $instrument_id = CRM_Core_DAO::singleValueQuery("SELECT id FROM civicrm_option_group WHERE name LIKE 'payment_instrument'");
  
  $group_params = array('name' => 'payment_instrument');
  foreach($new_instrument as $k => $v){
    $params = array(
      'name' => $k,
      'label' => $v['label'],
      'is_active' => 1,
      'is_reserved' => 1,
    );
    $dao = CRM_Core_DAO::executeQuery("SELECT id, value FROM civicrm_option_value WHERE option_group_id = {$instrument_id} AND name = '$k'");
    $dao->fetch();
    if($dao->id){
      $params['value'] = $dao->value;
      $action = CRM_Core_Action::UPDATE;
      $option_value_id = $dao->id;
    }
    else{
      $action = CRM_Core_Action::ADD;
      $option_value_id = 0;
    }
    CRM_Core_OptionValue::addOptionValue($params, $group_params, $action, $option_value_id);
  }
}

/**
 * Implementation of hook_uninstall().
 */
function civicrm_neweb_uninstall() {
  civicrm_initialize();
  require_once "CRM/Core/DAO.php";
  CRM_Core_DAO::executeQuery("DELETE FROM civicrm_payment_processor_type WHERE name LIKE 'Neweb'");
  CRM_Core_DAO::executeQuery("DELETE FROM civicrm_payment_processor WHERE payment_processor_type LIKE 'Neweb'");
  CRM_Core_DAO::executeQuery("OPTIMIZE TABLE civicrm_payment_processor_type");

  // we won't delete instrument for preserve contribution record
  // delete schema from drupal
  drupal_uninstall_schema('civicrm_neweb');
}

/**
 * Implementation of hook_enable().
 */
function civicrm_neweb_enable() {
  civicrm_initialize();
  require_once "CRM/Core/DAO.php";
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor_type SET is_active = 1 WHERE name LIKE 'Neweb'");
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor SET is_active = 1 WHERE payment_processor_type LIKE 'Neweb'");

  // add secure recurrent contribution transaction log dir
  civicrm_neweb_create_dir('neweb');
  civicrm_neweb_create_dir('neweb_test');
}

function civicrm_neweb_create_dir($directory){
  $directory_file_path = 'public://' . $directory;
  $htaccess_lines = "order allow,deny\ndeny from all\n";
  file_prepare_directory($directory_file_path, FILE_CREATE_DIRECTORY);
  $newebpath = variable_get('file_public_path', conf_path() . '/files') . '/' . $directory;
  
  if (($fp = @fopen($newebpath . '/.htaccess', 'w')) && @fputs($fp, $htaccess_lines)) {
    fclose($fp);
    chmod($newebpath . '/.htaccess', 0664);
  }
  else{
    $message = "Security warning: Couldn't modify .htaccess file. Please create a .htaccess file in your %directory directory which contains the following lines: <code>!htaccess</code> or add them to the existing .htaccess file";
    $replace = array('%directory' => $newebpath, '!htaccess' => '<br />' . nl2br(check_plain($htaccess_lines)));
    drupal_set_message(t($message, $replace), "error");
    watchdog('civicrm_neweb', t($message, $replace), WATCHDOG_ERROR);
  } 
}

/**
 * Implementation of hook_disable().
 */
function civicrm_neweb_disable() {
  civicrm_initialize();
  require_once "CRM/Core/DAO.php";
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor_type SET is_active = 0 WHERE name LIKE 'Neweb'");
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor SET is_active = 0 WHERE payment_processor_type LIKE 'Neweb'");
}

/**
 * hook_update 
 */
function civicrm_neweb_update_6105(){
  $schema = drupal_get_schema_unprocessed('civicrm_neweb');
  foreach($schema as $name => $table){
    if($name != 'civicrm_contribution_neweb_recur'){
      unset($schema[$name]);
    }
  }
  _drupal_initialize_schema('civicrm_neweb', $schema);
  $ret = array();
  foreach ($schema as $name => $table) {
    db_create_table($ret, $name, $table);
  }
  return $ret;
}

function civicrm_neweb_update_6106(){
  civicrm_neweb_create_dir('neweb');
  civicrm_neweb_create_dir('neweb_test');
  $ret = array();

  return $ret;
}

function civicrm_neweb_update_6107(){
  civicrm_initialize( );
  $new_instrument = _civicrm_neweb_instrument();
  $gid = CRM_Core_DAO::singleValueQuery("SELECT id FROM civicrm_option_group WHERE name LIKE 'payment_instrument'");

  foreach($new_instrument as $k => $v){
    $ids[] = CRM_Core_DAO::singleValueQuery("SELECT id FROM civicrm_option_value WHERE option_group_id = {$gid} AND name = '$k'");
  }
  if(count($ids)){
    CRM_Core_DAO::singleValueQuery("Update civicrm_option_value SET is_reserved = 1 WHERE id IN(".implode(',', $ids).") AND is_reserved = 0");
  }

  return array();
}

function civicrm_neweb_update_6108(){
  $ret = array();
  
  db_add_field($ret, 'civicrm_contribution_neweb', 'created', array(
    'description' => 'Submit time for user confirmed transaction.',
    'type' => 'int',
    'length' => '11',
    'not null' => FALSE,
  ));
  return $ret;
}

function civicrm_neweb_update_6109(){
  $date_field = array('created_date', 'receive_date', 'receipt_date', 'cancel_date', 'thankyou_date');
  civicrm_initialize();
  $query = CRM_Core_DAO::executeQuery("SELECT count(id) as counter, group_concat(id) as ids, group_concat(receipt_id) as receipt_ids FROM civicrm_contribution where receipt_id IS NOT NULL AND receipt_id != '' group by receipt_id having count(id) > 1");
  while($query->fetch()){
    $ids = $receipt_ids = array();
    $ids = explode(',', $query->ids);
    $receipt_ids = explode(',', $query->receipt_ids);
    foreach($ids as $k => $id){
      // skip first
      if(!$k) continue;
      // fix following
      $c =& new CRM_Contribute_DAO_Contribution();
      $c->id = $id;
      $c->find(true);
      // clear duplicate
      $c->receipt_id = NULL;

      // re-calculate receipt_id for correct month
      $receipt_id = CRM_Contribute_BAO_Contribution::genReceiptID($c, FALSE, TRUE, TRUE);
      if($receipt_id){
        $c->receipt_id = $receipt_id;
      }
      else{
        $c->receipt_id = 'null';
      }
      foreach($date_field as $f){
        if(!empty($c->{$f}) && $c->{$f} !== 'null'){
          $c->{$f} = CRM_Utils_Date::isoToMysql($c->{$f});
        }
        else{
          $c->{$f} = 'null';
        }
      }
      $c->save();
      $updated[] = $id;
    }
  }

}

function civicrm_neweb_update_6110(){
  $tests = array(0,1);
  foreach ($tests as $item) {
    $test = $item ? "" : "_test" ;
    variable_del('civicrm_neweb_response'.$test);
    variable_del('civicrm_neweb_transaction'.$test);
    variable_del('civicrm_neweb_uploaded'.$test);
    variable_del('civicrm_neweb_end_date_calculate'.$test);
    variable_del('civicrm_neweb_ezpay'.$test);
  }
  $ftp = variable_get('civicrm_neweb_ftp', $default);
  $ftp_test = variable_get('civicrm_neweb_ftp_test', $default);

  $sql = "SELECT id, is_test FROM `civicrm_payment_processor` WHERE `payment_processor_type` = 'Neweb'";
  $dao = CRM_Core_DAO::executeQuery($sql);
  while($dao->fetch()){
    $pid = $dao->id;
    if($dao->is_test == 0){
       variable_get('civicrm_neweb_ftp_'.$pid, $ftp);  
    }else{
      variable_get('civicrm_neweb_ftp_test_'.$pid, $ftp_test);  
    }
  }

  variable_del('civicrm_neweb_ftp');
  variable_del('civicrm_neweb_ftp_test');
}

/**
 * Add db field to swallow whole response
 */
function civicrm_neweb_update_7200() {
  $new_field = array(
    'type' => 'blob',
    'not null' => TRUE,
    'description' => 'Whole response object from neweb.',
  );
  db_add_field('civicrm_contribution_neweb', 'data', $new_field);
}
