<?php
/**
 * Implementation of hook_init()
 */
function civicrm_gw_init(){
  $path = drupal_get_path('module', 'civicrm_gw');
  drupal_add_css("$path/civicrm_gw.css");

  if(strstr($_GET['q'], 'civicrm_gw')){
    $GLOBALS['conf']['cache'] = FALSE;
  }
}

/**
 * Implementation of hook_menu()
 */
function civicrm_gw_menu(){
  return array(
    'gw/ipn/%' => array(
      'access callback' => true,
      'page callback' => 'civicrm_gw_ipn',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'weight' => 0,
      'file' => 'civicrm_gw.ipn.inc',
    ),
    'gw/popup/%' => array(
      'access callback' => true,
      'page callback' => 'civicrm_gw_popup',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'weight' => 0,
      'file' => 'civicrm_gw.checkout.inc',
    ),
  );
}


function civicrm_gw_error(){
  $msg = $_SESSION['gw']['error'];
  if(!count($msg)){
    drupal_access_denied();
  }
  $output .= '<div class="gw-error">';
  $output .= '<div class="gw-error-first">'.array_shift($msg).'</div>';
  foreach($msg as $m){
    $items[] = $m;
  }
  $output .= theme('item_list', $items);
  $output .= '</div>';
  return $output;
}

/**
 * Implementation of hook_civicrm_buildForm()
 */
function civicrm_gw_civicrm_buildForm($form_name, &$form){
  switch($form_name){
    case 'CRM_Contribute_Form_Contribution_ThankYou':
      break;
    case 'CRM_Contribute_Form_Contribution_Main':
      break;
  }
}

/**
 * Implementation of hook_civicrm_postProcess()
function civicrm_gw_civicrm_postProcess($form_name, &$form){
}
 */

/**
 * Implementation of hook_cron()
 */
function civicrm_gw_cron(){
  // we don't need cron, yet
}

function _civicrm_gw_instrument($type = 'normal'){
  $i = array(
    'Credit Card' => array('label' => '信用卡', 'desc' => '', 'code' => 'Credit Card'),
    'ATM' => array('label' => 'ATM 轉帳', 'desc' => '', 'code' => 'vacc'),
    'Web ATM' => array('label' => 'Web ATM', 'desc' => '', 'code' => 'web_atm'),
    'Convenient Store' => array('label' => '超商條碼繳費', 'desc'=>'', 'code' => 'barcode'),
    'Convenient Store (FamilyMart)' => array('label'=>'超商代碼 (全家/萊爾富)','desc' => '', 'code' => 'cvs'),
    'Convenient Store (7-11 ibon)' => array('label'=>'超商代碼 (7-11 ibon)','desc' => '', 'code' => 'ibon'),
    'UnionPay' => array('label'=> '銀聯卡', 'desc' => '', 'code' => 'unionpay'),
  );
  if($type == 'form_name'){
    foreach($i as $name => $data){
      $form_name = preg_replace('/[^0-9a-z]+/i', '_', strtolower($name));
      $instrument[$form_name] = $data;
    }
    return $instrument;
  }
  elseif($type == 'code'){
    foreach($i as $name =>  $data){
      $instrument[$name] = $data['code'];
    }
    return $instrument;
  }
  else{
    return $i;
  }
}

/**
 * Help function for generate post string
 */
function _civicrm_gw_vars2str($post){
  $array = array();
  foreach($post as $name => $value){
    if($value){
      $array[] = $name."=".urlencode($value);
    }
  }
  return implode('&', $array);
}

/**
 * Help function for convert string to array
 */
function _civicrm_gw_vars2array($str){
  $vars = explode('&', $str);
  foreach($vars as $var){
    list($name, $value) = explode('=', $var, 2);
    if($name == 'errormessage'){
      $value = iconv("Big5","UTF-8",$value);
    }
    $params[$name] = $value;
  }
  return $params;
}

/**
 * Help funtion for printing payment info
 */
function _civicrm_gw_payment_info($cid, $instrument){
  civicrm_initialize();
  $gw = db_fetch_object(db_query("SELECT * FROM {civicrm_contribution_gw} WHERE cid = %d", $cid));
  $amount = CRM_Core_DAO::singleValueQuery("SELECT total_amount FROM civicrm_contribution WHERE id = {$cid}");
  $data = array();
  switch($instrument){
    case 'cvs':
    case 'ibon':
      $data[] = array('付款代碼', $gw->payno);
      $data[] = array('付款金額', $amount);
      $data[] = array('付款期限', format_date($gw->expire_datetime, 'short'));
      break;
    case 'vacc':
      $data[] = array('轉帳銀行代碼', '玉山銀行 ('.$gw->bankcode.')');
      $data[] = array('轉帳銀行帳號', $gw->vaccno);
      $data[] = array('付款金額', $amount);
      $data[] = array('付款期限', format_date($gw->expire_datetime, 'custom', 'Y/m/d'));
      break;
  }
  return $data;
}
