<?php
// $Id: devel.install,v 1.24.2.7 2009/07/30 19:38:48 weitzman Exp $
/**
 * @file
 *   Install file for civicrm_allpay module.
 */

/**
 * Implementation of hook_schema()
 */
function civicrm_allpay_schema(){
  $schema['civicrm_contribution_allpay'] = array(
    'fields' => array(
      'cid' => array(
        'description' => 'Contribution id for civicrm',
        'type' => 'int',
        'length' => '11',
        'not null' => TRUE,
      ),
      'data' => array(
        'description' => 'Whole response object from allpay.',
        'type' => 'blob',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('cid'),
    'mysql_suffix' => 'ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci',
  );
  return $schema;
}
 
/**
 * Implementation of hook_install()
 */
function civicrm_allpay_install() {
  drupal_install_schema('civicrm_allpay');
  civicrm_initialize( );

  // new payment processor - credit card (allowed recurring)
  $sql = "INSERT INTO civicrm_payment_processor_type (name, title, description, is_active, is_default, user_name_label, password_label, signature_label, subject_label, class_name, url_site_default, url_api_default, url_recur_default, url_button_default, url_site_test_default, url_api_test_default, url_recur_test_default, url_button_test_default, billing_mode, is_recur, payment_type) VALUES ('ALLPAY', '歐付寶信用卡', NULL, 1, 0, '商店代號', 'HashKey', 'HashIV', '', 'Payment_ALLPAY', 'https://payment.allpay.com.tw/Cashier/AioCheckOut', 'https://payment.allpay.com.tw/Cashier/QueryTradeInfo', 'https://payment.allpay.com.tw/Cashier/QueryPeriodCreditCardTradeInfo', NULL, 'http://payment-stage.allpay.com.tw/Cashier/AioCheckOut', 'http://payment-stage.allpay.com.tw/Cashier/QueryTradeInfo', 'http://payment-stage.allpay.com.tw/Cashier/QueryPeriodCreditCardTradeInfo', NULL, 4, 1, 1)";
  CRM_Core_DAO::executeQuery($sql);

  // new payment processor - others (not allowed recurring)
  $sql = "INSERT INTO civicrm_payment_processor_type (name, title, description, is_active, is_default, user_name_label, password_label, signature_label, subject_label, class_name, url_site_default, url_api_default, url_recur_default, url_button_default, url_site_test_default, url_api_test_default, url_recur_test_default, url_button_test_default, billing_mode, is_recur, payment_type) VALUES ('ALLPAYX', '歐付寶非信用卡', NULL, 1, 0, '商店代號', 'HashKey', 'HashIV', '', 'Payment_ALLPAY', 'https://payment.allpay.com.tw/Cashier/AioCheckOut', 'https://payment.allpay.com.tw/Cashier/QueryTradeInfo', 'https://payment.allpay.com.tw/Cashier/QueryPeriodCreditCardTradeInfo', NULL, 'http://payment-stage.allpay.com.tw/Cashier/AioCheckOut', 'http://payment-stage.allpay.com.tw/Cashier/QueryTradeInfo', 'http://payment-stage.allpay.com.tw/Cashier/QueryPeriodCreditCardTradeInfo', NULL, 4, 0, 1)";
  CRM_Core_DAO::executeQuery($sql);

  // new payment instrument
  include_once "civicrm_allpay.module";
  $new_instrument = _civicrm_allpay_instrument();
  $gid = CRM_Core_DAO::singleValueQuery("SELECT id FROM civicrm_option_group WHERE name LIKE 'payment_instrument'");
  $next = CRM_Core_DAO::singleValueQuery("SELECT value FROM civicrm_option_value WHERE option_group_id = {$gid} ORDER BY value DESC");
  
  $group_params = array('name' => 'payment_instrument');
  foreach($new_instrument as $k => $v){
    $params = array(
      'name' => $k,
      'label' => $v['label'],
      'is_active' => 1,
      'is_reserved' => 1,
    );
    $dao = CRM_Core_DAO::executeQuery("SELECT id, value FROM civicrm_option_value WHERE option_group_id = {$gid} AND name = '$k'");
    $dao->fetch();
    if($dao->id){
      $params['value'] = $dao->value;
      $action = CRM_Core_Action::UPDATE;
      $option_value_id = $dao->id;
    }
    else{
      $action = CRM_Core_Action::ADD;
      $option_value_id = 0;
    }
    CRM_Core_DAO::executeQuery("UPDATE civicrm_option_value SET is_active = 0 WHERE name = 'Convenient Store (FamilyMart)' OR name = 'Convenient Store (7-11 ibon)' OR name = 'UnionPay'");
    CRM_Core_OptionValue::addOptionValue($params, $group_params, $action, $option_value_id);
  }
}

/**
 * Implementation of hook_uninstall().
 */
function civicrm_allpay_uninstall() {
  civicrm_initialize();
  require_once "CRM/Core/DAO.php";
  CRM_Core_DAO::executeQuery("DELETE FROM civicrm_payment_processor_type WHERE name LIKE 'ALLPAY'");
  CRM_Core_DAO::executeQuery("DELETE FROM civicrm_payment_processor WHERE payment_processor_type LIKE 'ALLPAY'");
  CRM_Core_DAO::executeQuery("OPTIMIZE TABLE civicrm_payment_processor_type");

  // we won't delete instrument for preserve contribution record
  // delete schema from drupal
  drupal_uninstall_schema('civicrm_allpay');

}

/**
 * Implementation of hook_enable().
 */
function civicrm_allpay_enable() {
  civicrm_initialize();
  require_once "CRM/Core/DAO.php";
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor_type SET is_active = 1 WHERE name LIKE 'ALLPAY'");
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor SET is_active = 1 WHERE payment_processor_type LIKE 'ALLPAY'");
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor SET is_active = 1 WHERE payment_processor_type LIKE 'ALLPAY'");
}

/**
 * Implementation of hook_disable().
 */
function civicrm_allpay_disable() {
  civicrm_initialize();
  require_once "CRM/Core/DAO.php";
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor_type SET is_active = 0 WHERE name LIKE 'ALLPAY'");
  CRM_Core_DAO::executeQuery("UPDATE civicrm_payment_processor SET is_active = 0 WHERE payment_processor_type LIKE 'ALLPAY'");
}

/**
 * Implement hook_update_N
 */
function civicrm_allpay_update_6101(){
  require_once('civicrm_allpay.module');
  $ret = array();
  civicrm_initialize();

  // update trxn_id to parent_id-gwsr_id
  $query = CRM_Core_DAO::executeQuery("SELECT a.cid, a.data, c.contribution_recur_id, c.trxn_id FROM civicrm_contribution_allpay a INNER JOIN civicrm_contribution c ON a.cid=c.id WHERE c.contribution_recur_id IS NOT NULL AND c.contribution_recur_id != 0 ORDER BY c.contribution_recur_id,created_date ASC");
  while($query->fetch()){
    $data = $trxn_id = NULL;
    if($query->data){
      $data = json_decode($query->data);
      if($data->Gwsr && $data->MerchantTradeNo != $query->cid){
        $trxn_id = array(1 => array(_civicrm_allpay_recur_trxn($data->MerchantTradeNo, $data->Gwsr), 'String'));
        CRM_Core_DAO::executeQuery("UPDATE civicrm_contribution SET trxn_id = '%1' WHERE id = $query->cid", $trxn_id);
      }
    }
  }

  return $ret;
}
