<?php

/**
 * Implementation of hook_civicrm_buildForm()
 */
function civicrm_allpay_civicrm_buildForm($form_name, &$form){
  switch($form_name){
    case 'CRM_Admin_Form_PaymentProcessor':
      $is_allpay = FALSE;
      if(strstr($_GET['pp'], 'ALLPAY')){
        $is_allpay = TRUE;
      }
      elseif(!empty($form->_ppType) && strstr($form->_ppType, 'ALLPAY')){
        $is_allpay = TRUE;
      }
      if($is_allpay){
        \Drupal::messenger()->addStatus("本網站的 IP 為「".gethostbyname($_SERVER['HTTP_HOST']).'」。<br />請登入綠界後台，廠商後台 > 系統開發管理 > 系統介接設定 > 允許的 IP中，填入本站IP。');
      }
      break;
    case 'CRM_Contribute_Form_Contribution_Main':
    case 'CRM_Event_Form_Registration_Register':
      $session = CRM_Core_Session::singleton();
      $submitted = $session->get('submitted');
      $session->set('submitted', FALSE);
      if($submitted){
        if($_SESSION['allpay']['instrument'] == 'Credit'){
          \Drupal::messenger()->addError(ts("This message indicate your last payment may not success because you didn't submit credit card information. If you are sure you have completed the transaction, please contact us. Otherwise, you can retry again."));
        }
        else{
          \Drupal::messenger()->addError(ts("You just submit a payment. You may want to check your email to follow payment instruction, or try submit this form again."));
        }
      }
      if(isset($_GET['id']) && $_GET['id']!== NULL){
        $parsed = parse_url($_SERVER['REQUEST_URI']);
        $_SESSION['allpay'] = array(
          'path' => $_GET['q'],
          'query' => $parsed['query'],
        );
      }
      break;
    case 'CRM_Contribute_Form_Contribution_ThankYou':
    case 'CRM_Event_Form_Registration_ThankYou':
      if(!preg_match("/ALLPAY/",$form->_paymentProcessor['payment_processor_type'])){
        return;
      }
      $status = $msg = NULL;
      $params = array();
      // Credit card have result immediately
      if(isset($form->_submitValues) && !empty($form->_submitValues['MerchantTradeNo'])){
        $params['trxn_id'] = $form->_submitValues['MerchantTradeNo'];
        if(!empty($form->_submitValues['RtnCode'])){
          if($form->_submitValues['RtnCode'] == 1){ // success
            // check contribution if have same result
            $contrib_params = array('trxn_id' => $params['trxn_id']);
            $contrib_values = $contrib_ids = array();
            CRM_Contribute_BAO_Contribution::getValues($contrib_params, $contrib_values, $contrib_ids);
            if(!empty($contrib_values['id']) && $contrib_values['contribution_status_id'] != 1 && strstr($form->_submitValues['PaymentType'], 'Credit')){
              // trigger ipn success
              $ids = CRM_Contribute_BAO_Contribution::buildIds($contrib_values['id']);
              $query = CRM_Contribute_BAO_Contribution::makeNotifyUrl($ids, NULL, $return_query = TRUE);
              parse_str($query, $get);
              $post = $_POST;
              $result = CRM_Core_Payment_ALLPAY::doIPN('Credit', $post, $get, FALSE);
              if(strstr($result, 'OK')){
                $status = 1;
              }
              else{
                $status = 2;
              }
            }
            else{
              $status = 1;
            }
          }
          else {
            $msg = CRM_Core_Payment_ALLPAY::getErrorMsg($form->_submitValues['RtnCode']);
            $status = 4;
          }
        }
        CRM_Contribute_BAO_Contribution_Utils::paymentResultType($form, $params, $status, $msg);
      }
      // non-direct payment
      else {
        $saved_params = $form->controller->get('params');
        if(!empty($saved_params['trxn_id'])){
          $params['trxn_id'] = $saved_params['trxn_id'];

          // build notify billing info
          module_load_include("inc", 'civicrm_allpay', 'civicrm_allpay.notify');
          $info = civicrm_allpay_notify_bytrxn($params['trxn_id']);
          if($form_name == 'CRM_Event_Form_Registration_ThankYou'){
            $civicrm_instrument_id = $saved_params[0]['civicrm_instrument_id'];
          }else{
            $civicrm_instrument_id = $saved_params['civicrm_instrument_id'];
          }
          $display = civicrm_allpay_notify_display($info, $civicrm_instrument_id);
          $form->assign('payment_instrument', $display); 

          // add result type
          CRM_Contribute_BAO_Contribution_Utils::paymentResultType($form, $params, $status, $msg);
        }
      }
      unset($_SESSION['allpay']);
      break;
  }
}

/**
 * Implementation of hook_civicrm_validate()
 */
function civicrm_allpay_civicrm_validate($form_name, &$form){
  $errors = array();
  if($form_name == 'CRM_Contribute_Form_Contribution_Main'){
    if(!empty($form['payment_processor'])){
      $params = array(
        1 => array($form['payment_processor'], 'Integer'),
      );
      $processor_type = CRM_Core_DAO::singleValueQuery("SELECT payment_processor_type FROM civicrm_payment_processor WHERE id = %1", $params);
      if($processor_type == 'ALLPAY'){
        if(!empty($form['installments']) && $form['installments'] > 99){
          $errors['installments'] = ts('Installments of recurring must lower than 99.');
        }
        if(!empty($form['installments']) && $form['installments'] > 9 && !empty($form['frequency_unit']) && $form['frequency_unit'] == 'year'){
          $errors['installments'] = ts('The years of recurring installments must lower than 9.');
        } 
      }
      /* Already done by CRM_Contribute_Form_Contribution_Main
      if($processor_type == 'ALLPAYX' && !empty($form['is_recur'])){
        // don't allow recurring on non-credit card method
        $session = CRM_Core_Session::singleton();
        $errors['is_recur'] = ts('You cannot set up a recurring contribution if you are not paying online by credit card.');
      }
      */
    }
  }
  return empty( $errors ) ? true : $errors;
}

/**
 * Implementation of hook_civicrm_prepareInvoice()
 */
function civicrm_allpay_civicrm_prepareInvoice($contribution_id, &$tplParams){
  $sql = "SELECT pp.payment_processor_type FROM civicrm_contribution c
    INNER JOIN civicrm_payment_processor pp ON c.payment_processor_id = pp.id
    WHERE c.id = $contribution_id";
  $payment_process_type = CRM_Core_DAO::singleValueQuery($sql);
  if(preg_match('/ALLPAY/', $payment_process_type)){
    module_load_include("inc", 'civicrm_allpay', 'civicrm_allpay.notify');
    $tplParams = civicrm_allpay_notify_generate($contribution_id, FALSE);
  }
}

/**
 * Implementation of hook_cron()
 */
function civicrm_allpay_cron(){
  // every morning, we check allpay payment result
  $last = \Drupal::state()->get('civicrm_allpay.recur_sync', 0);
  $now = time();
  if($now - $last > 60000 && date('G') > '18' && date('G') < '23'){
    civicrm_allpay_recur_sync();
    \Drupal::state()->set('civicrm_allpay.recur_sync', $now);
  }
}

/**
 * Help function for generate post string
 */
function _civicrm_allpay_vars2str($post){
  $array = array();
  foreach($post as $name => $value){
    if($value){
      $array[] = $name."=".urlencode($value);
    }
  }
  return implode('&', $array);
}

function civicrm_allpay_fee_sync(){
  civicrm_initialize();
  $limit = 100;
  $check_start_date = date('Y-m-d', strtotime('-60 days'));
  $check_end_date = date('Y-m-d', strtotime('-8 days'));
  $query = "SELECT id, created_date, receive_date, total_amount, fee_amount, net_amount, trxn_id, payment_processor_id as pid FROM civicrm_contribution WHERE is_test = 0 AND receive_date > %1 AND receive_date < %2 AND contribution_status_id = 1 AND payment_processor_id IS NOT NULL AND (fee_amount IS NULL OR fee_amount = 0) ORDER BY receive_date DESC LIMIT 0, $limit";
  $result = CRM_Core_DAO::executeQuery($query, array(
    1 => array($check_start_date, 'String'),
    2 => array($check_end_date, 'String'),
  ));

  while($result->fetch()){
    if(!isset($payment_processors[$result->pid])){
      $payment_processors[$result->pid] = CRM_Core_BAO_PaymentProcessor::getPayment($result->pid, 'live');
    }
    $payment_processor = $payment_processors[$result->pid];
    if($payment_processor['payment_processor_type'] != 'ALLPAY'){
      continue;
    }
    else{
      if(!empty($payment_processor['url_recur']) && !empty($payment_processor['user_name'])){
        $net_amount = $fee_amount = NULL;
        $processor = array(
          'password' => $payment_processor['password'],
          'signature' => $payment_processor['signature'],
        );
        $post_data = array(
          'MerchantID' => $payment_processor['user_name'],
          'MerchantTradeNo' => $result->trxn_id,
          'TimeStamp' => time(),
        );
        CRM_Core_Payment_ALLPAY::generateMacValue($post_data, $processor);
        $response = CRM_Core_Payment_ALLPAY::postdata($payment_processor['url_api'], $post_data, FALSE);
        if(!empty($response) && $response->MerchantTradeNo == $result->trxn_id && !empty($response->HandlingCharge)){
          $fee_amount = (float)$response->HandlingCharge;
          $net_amount = $result->total_amount - $fee_amount;
          CRM_Core_DAO::executeQuery("UPDATE civicrm_contribution SET fee_amount = %1, net_amount = %2 WHERE id = %3", array(
            1 => array($fee_amount, 'Float'),
            2 => array($net_amount, 'Float'),
            3 => array($result->id, 'Integer'),
          ));
        }
        usleep(200000); // sleep 0.2 second
      }
    }
  }
}

function _civicrm_allpay_cancel_recuring_message(){
  $js = '<p>因綠界並未提供取消定期定額的介接，<br/>因此無法從 CRM 後台取消。<br/>請到<a target="_blank" href="https://vendor.ecpay.com.tw/">綠界的後台</a>進行取消之操作，確認取消後，系統會於下次該捐款的扣款日時，自動同步綠界上的定期定額訂單狀態，這段時間的資料以綠界後台的狀態為主</p><p style="font-size:0.5em;">更詳細的內容請參考我們的<a target="_blank" href="https://neticrm.tw/resources/2497">手冊說明</a>。</p><script>cj(".ui-dialog-buttonset button").hide();</script>';
  return $js;
}

function civicrm_allpay_notify_generate($cid, $send_mail = FALSE){
  civicrm_initialize();
  $info = civicrm_allpay_notify_info($cid);
  if(!empty($info)){
    $info['display'] = civicrm_allpay_notify_display($info);
    if($info['#type'] == 'BAR'){
      $info['has_receipt'] = 1;
      $info['display'] = civicrm_allpay_notify_display_barcode($info);
    }

    if($send_mail){
      $message = '';
      CRM_Contribute_BAO_Contribution::getInvoice($cid, $info, $message, $send_mail);
    }
    else{
      return $info;
    }
  }
}

function civicrm_allpay_notify_bytrxn($trxn_id){
  $cid = CRM_Core_DAO::singleValueQuery("SELECT id FROM civicrm_contribution WHERE trxn_id = %1", array(1 => array($trxn_id, 'String')));
  return civicrm_allpay_notify_info($cid);
}

function civicrm_allpay_notify_info($cid){
  $data = CRM_Core_DAO::singleValueQuery("SELECT data FROM civicrm_contribution_allpay WHERE cid = %1", array(1 => array($cid, 'Positive')));
  $json = json_decode($data, TRUE);
  if(!empty($json['#info'])){
    $info =& $json['#info'];
    $type = substr($info['PaymentType'], 0, 3);
    $return = array();
    $invoice_link = CRM_Contribute_BAO_Contribution_Utils::invoiceLink($cid);
    switch($type){
      case 'ATM':
        $return['繳費銀行代碼'] = $info['BankCode'];
        $return['繳費虛擬帳號'] = $info['vAccount'];
        $return['繳費期限'] = $info['ExpireDate'];
        break;
      case 'CVS':
        $help = '<a href="https://www.ecpay.com.tw/Service/pay_way_cvpay" target="_blank">» 步驟說明</a>';
        $return['便利商店繳費代碼'] = $info['PaymentNo'];
        $return['繳費期限'] = $info['ExpireDate'];
        $return[] = $help;
        break;
      case 'BAR':
        $barcodepath = 'https://pay.ecpay.com.tw/bank/tcbank/cnt/GenerateBarcode?barcode=';
        $barcode = array($info['Barcode1'], $info['Barcode2'], $info['Barcode3']);
        foreach($barcode as $k => $b){
          $return['#barcode'.$k] = '<div><img src="'.$barcodepath.$b.'" alt="'.$b.'" /></div>';
        }
        $return['繳費單'] = '<a href="'.$invoice_link.'" target="_blank">» 列印繳費單</a>';
        $return['繳費期限'] = $info['ExpireDate'];
        break;
    }
    if(!empty($return)){
      $return['#type'] = $type;
      $return['#expire'] = $info['ExpireDate'];
      $return['#invoice'] = $invoice_link;
      return $return;
    }
  }

  // error fallback
  return array();
}

function civicrm_allpay_notify_display($info, $payment_instrument_id = NULL){
  $instruments = CRM_Contribute_PseudoConstant::paymentInstrument();
  $output = '';
  foreach($info as $label => $value){
    if(preg_match('/^#/', $label)){
      continue;
    }
    elseif(is_numeric($label)){
      $output .= '<dd>'.' <span>'.$value.'</span></dd>';
    }
    else{
      $output .= '<dd><label>'.$label.':</label>'.' <span>'.$value.'</span></dd>';
    }
  }
  $payment_instrument = !empty($payment_instrument_id) ? '<strong>'.$instruments[$payment_instrument_id].'</strong>' : '';
  $output = $payment_instrument.'<dl>'.$output.'</dl>';
  return $output;
}

function civicrm_allpay_notify_display_barcode($info){
  $output = '<div style="border:1px solid #000;padding:10px;margin:10px;float:right;width:200px;height:175px;color:#777;">代收店舖章</div>';
  foreach($info as $label => $v){
    if(preg_match('/^#barcode/', $label)){
      $output .= '<div>'.$v.'</div>';
    }
  }
  $output .= '<p><label>繳費期限:</label> <span>'.$info['#expire'].'</span></p>';
  return $output;
}
