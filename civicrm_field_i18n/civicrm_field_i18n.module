<?php

/**
 * Implementation hook_civicrm_buildForm
 */
function civicrm_field_i18n_civicrm_buildForm($form_name, &$form){
  global $language;
  $allowed = array(
    'CRM_Profile_Form_Edit',
    'CRM_Profile_Form_Dynamic',
    'CRM_UF_Form_Preview',
    'CRM_Contribute_Form_Contribution_Main',
  );
  if($language->language != 'en' && in_array($form_name, $allowed)){
    if(is_array($form->_fields)){
      reset($form->_fields);
      foreach($form->_fields as $k => $f){
        if(!empty($form->_fields[$k]['groupTitle'])){
          $form->_fields[$k]['groupTitle'] = civicrm_field_i18n_t($form->_fields[$k]['groupTitle']);
        }
      }
    }
    foreach ($form->_elements as $k => $e) {
      $name = isset($e->_name) ? $e->_name : '';
      if($e->_type != 'hidden' && $name != 'buttons'){
        if(!empty($e->_label)){
          $form->_elements[$k]->_label = civicrm_field_i18n_t($e->_label);
        }
        switch($e->_type){
          case 'checkbox':
            $form->_elements[$k]->_text = civicrm_field_i18n_t($e->_text);
            break;
          case 'select':
            if(!empty($e->_options) && is_array($e->_options)){
              for($i = 0; $i < count($e->_options); $i++){
                $form->_elements[$k]->_options[$i]['text'] = civicrm_field_i18n_t($e->_options[$i]['text']);
              }
            }
            break;
          case 'group': // radios
            if(!empty($e->_elements) && is_array($e->_elements)){
              $first = reset($e->_elements);
              if($first->_type == 'radio'){
                foreach($e->_elements as $i => $radio){
                  $form->_elements[$k]->_elements[$i]->_text = civicrm_field_i18n_t($radio->_text);
                }
              }
            }
            break;
        }
      }
    }
    // for civicrm contribution page and event page
    if($form_name == 'CRM_Contribute_Form_Contribution_Main'){
      // group title
      $template = CRM_Core_Smarty::singleton();
      $profiles = array('customPre', 'customPost');
      foreach($profiles as $p){
        $vars = $template->get_template_vars($p);
        if(!empty($vars)){
          foreach($vars as $k => $v){
            if(!empty($v['groupTitle'])){
              $vars[$k]['groupTitle'] = civicrm_field_i18n_t($v['groupTitle']);
            }
          }
          $template->assign($p, $vars);
          $vars = array();
        }
      }
    }
  }
}

function civicrm_field_i18n_civicrm_pageRun($page){
  global $language;
  if(is_object($page)){
    $class = get_class($page);
    if($class == 'CRM_Profile_Page_Dynamic' && $language->language != 'en'){
      civicrm_initialize();
      $template = CRM_Core_Smarty::singleton();
      $fields = $template->get_template_vars('profileFields');
      foreach($fields as $k => $f){
        if(!empty($f['label'])){
          $fields[$k]['label'] = civicrm_field_i18n_t($f['label']);
        }
      }
      $template->assign_by_ref('profileFields', $fields);
    }
  }
}

function civicrm_field_i18n_user($op, &$edit, &$user){
  if($op == 'view'){
    if(is_array($user->content)){
      foreach($user->content as $k => $c){
        if(is_array($c) && !empty($c['#title']) && isset($c[$c['#title']])){
          $content = $c[$c['#title']]['#value'];
          if(strstr($content, 'crm-container')){
            $user->content[$k]['#title'] = civicrm_field_i18n_t($c['#title']);
          }
        }
      }
    }
  }
}

function civicrm_field_i18n_t($text){
  if(!empty($text) && civicrm_field_i18n_test($text) === $text){
    return t($text, array());
  }
  return empty($text) ? '' : $text;
}

function civicrm_field_i18n_test($text){
  return preg_replace('/[^a-zA-Z0-9\/_|+ .-?!]+/', '', $text);
}
