<?php

function civicrm_backer_autoimport_install() {
  civicrm_initialize();
  
  $exists = CRM_Core_DAO::singleValueQuery("SELECT id FROM civicrm_payment_processor_type WHERE class_name LIKE 'Payment_Backer'");
  if (!$exists){
    $sql = "INSERT INTO civicrm_payment_processor_type (name, title, description, is_active, is_default, user_name_label, password_label, signature_label, subject_label, class_name, url_site_default, url_api_default, url_recur_default, url_button_default, url_site_test_default, url_api_test_default, url_recur_test_default, url_button_test_default, billing_mode, is_recur ) VALUES ('BACKER', '".ts("Backer Founder")."', NULL, 1, 0, NULL, 'Secret Key', NULL, NULL, 'Payment_Backer', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 7, 0)";
    CRM_Core_DAO::executeQuery($sql);
  }

  // add relationship
  $types = CRM_Core_PseudoConstant::relationshipType();
  foreach($types as $tid => $type) {
    if ($type['label_a_b'] == ts('Orderer') && $type['label_b_a'] == ts('Recipients') && $type['contact_type_a'] == '' && $type['contact_type_b'] == '') {
      $rtypeId = $tid;
      break;
    }
    if ($type['label_a_b'] == 'Orderer' && $type['label_b_a'] == 'Recipients' && $type['contact_type_a'] == '' && $type['contact_type_b'] == '') {
      $rtypeId = $tid;
      break;
    }
  }
  if (!$rtypeId) {
    $params = array(
      'label_a_b' => ts('Orderer'),
      'label_b_a' => ts('Recipient'),
      'description' => ts("Used for").': '.ts('Backer Auto Import'),
      'is_active' => 1,
      'is_reserved' => 1,
      'contact_type_a' => '',
      'contact_type_b' => '',
      'contact_types_a' => '',
      'contact_types_b' => '',
      'contact_sub_type_a' => '',
      'contact_sub_type_b' => '',
    );
    $ids = array();
    $saved = CRM_Contact_BAO_RelationshipType::add($params, $ids);
    $rtypeId = $saved->id;
  }
  $params = array(
    'backerFounderRelationship' => $rtypeId,
  );
  CRM_Core_BAO_ConfigSetting::add($params);
}