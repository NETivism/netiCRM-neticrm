<?php

/**
 * Implement hook_menu
 */
function civicrm_participant_serial_menu(){
  return array(
    'admin/settings/civicrm_participant_serial' => array(
      'title'            => 'CiviCRM Participant Serial',
      'access arguments' => array('administer CiviCRM'),
      'page callback'    => 'drupal_get_form',
      'page arguments'    => array('civicrm_participant_serial_settings'),
    )
  );

}

/**
 * Implement hook_civicrm_buildForm
 */
function civicrm_participant_serial_civicrm_buildForm($form_name, &$form){
  switch($form_name){
    case 'CRM_Event_Form_Registration_AdditionalParticipant':
    case 'CRM_Event_Form_Registration_Register':
      // hide serial field
      $cid = variable_get('civicrm_participant_serial', '');
      $c_field = 'custom_'.$cid;
      drupal_add_js('$(document).ready(function(){  $(".'.$c_field.'-section").hide(); });', 'inline');
      break;
  }
}

/**
 * Implement hook_civicrm_preSave
 */
function civicrm_participant_serial_civicrm_preSave($form_name, &$form){
  switch($form_name){
    case 'CRM_Event_Form_Registration_AdditionalParticipant':
    case 'CRM_Event_Form_Registration_Register':
      $event_id = $form->getVar('_eventId');
      $is_test = $form->getVar('_mode') == 'test' ? 1 : 0;
      if($cid = variable_get('civicrm_participant_serial', '')){
        $query = "SELECT cg.table_name, cg.id, cf.column_name, cf.id as fid FROM   civicrm_custom_group cg, civicrm_custom_field cf WHERE cf.custom_group_id = cg.id AND cg.is_active = 1  AND cf.is_active = 1 AND cf.id = $cid";
        $dao = CRM_Core_DAO::executeQuery($query);
        if($dao->fetch()){
          if($dao->table_name && $dao->column_name){
            // try to direct control session value
            $session_id = '_'.$form->controller->_name.'_container';

            foreach($_SESSION[$session_id]['values'] as $k => $v){
              if(isset($v['custom_'.$cid])){
                $count++;
                $query = "SELECT t.{$dao->column_name} as serial FROM {$dao->table_name} t INNER JOIN civicrm_participant p ON p.id = t.entity_id WHERE p.event_id = {$event_id} AND p.is_test = {$is_test} ORDER BY t.{$dao->column_name} DESC";
                $sid = CRM_Core_DAO::singleValueQuery($query);
                if($sid){
                  $sid+=$count;
                }
                else{
                  $sid = 0 + $count;
                }
                $_SESSION[$session_id]['values'][$k]['custom_'.$cid] = $sid;
              }
            }

          }
        }
        
      }
      break;
  }
}

function civicrm_participant_serial_settings(){
  civicrm_initialize();
  require_once('CRM/Core/BAO/CustomField.php');
  $result = CRM_Core_BAO_CustomField::getFields('Participant', true, true);
  foreach($result as $id => $values){
    if($values['data_type'] == 'Int'){
      $options[$id] = $values['label'];
    }
  }
  $desc = t('You must <a href="!href">create custom field and group</a> in civicrm, setting the field type to "integer" and custom group type to "participant". After create the field, you can go back here to complete setup.', array('!href' => url('civicrm/admin/custom/group', array('query' => 'reset=1'))));
  if(!empty($options)){
    $form['civicrm_participant_serial'] = array(
      '#type' => 'select',
      '#title' => t('Participant Serial Number Field'),
      '#options' => $options,
      '#description' => $desc,
      '#default_value' => variable_get('civicrm_participant_serial', ''),
    );
  }
  else{
    drupal_set_message($desc, 'warning');
  }
  return system_settings_form($form);
    
}
