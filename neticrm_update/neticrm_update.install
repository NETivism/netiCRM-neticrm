<?php
/**
 * netiCRM update main install file
 *
 * Every file in update/*.inc should use this style to handling update success or not
 *
 * ```php
 * // success
 * #return 'Messages';     # drupal 6,7,9: this will display success message
 * #return TRUE            # drupal 6,7,9: will be success
 * #return NULL            # drupal 6,7.9: no return value or return null will be success

 * // failed, error,  schema_version will not be update
 * #return '[error] ooo';  # drupal 6,7,9: this will trigger error, and display meaningful message
 * #return FALSE;          # drupal 6,7,9: this will trigger error,

 * // should never use
 * #throw UpdateException  # drupal 9 only, will be fatal error on drupal 6,7
 * #throw DrupalUpdateException  # drupal 7 only, will be fatal error on drupal 6,9
 * #return  array('success' => FALSE, 'query' => 'OOO'); # drupal 6 only, will be fatal error on drupal 7,9
 * ```
 *
 */

use Drupal\Core\Utility\UpdateException;

/**
 * Include correct file for update
 *
 * @return mixed
 */
function neticrm_update_load_include($func){
  if(function_exists('civicrm_initialize')){
    $n = substr($func, strrpos($func, '_')+1);
    if(is_numeric($n)){
      civicrm_initialize();
      \Drupal::moduleHandler()->loadInclude('neticrm_update', 'inc', 'neticrm_update.lib');
      $path = dirname(__FILE__).'/update/';

      $neticrm_update = $path . 'neticrm_x'.substr($n, 1).'.inc'; # eg. neticrm_x300.inc
      $filename = $path . $n. '.inc';   # eg. 9300.inc

      // check if this is global neticrm update
      if (file_exists($neticrm_update)) {
        $filename = $neticrm_update;
        require_once $filename;
        $func = '_neticrm_update_update_x'.substr($n, 1); # eg. _neticrm_update_update_x300()
      }
      // if not, it's drupal version sensitive update
      elseif(file_exists($filename)){
        require_once $filename;
        $func = '_'.$func;
      }
      else {
        throw new UpdateException("Can not find update file in $filename or $neticrm_update when updating $func");
      }

      if(function_exists($func)){
        $result = $func();
        if ($result === FALSE) {
          throw new UpdateException("Update failed in $func with no detail");
        }
        elseif (is_string($reuslt) && stristr($result, '[error]')) {
          throw new UpdateException("Update failed in $func. Message: $result");
        }
        else {
          // success
          if (is_string($result)) {
            return "$func successfully updated. ".$result;
          }
          else {
            return "$func successfully updated. No details message.";
          }
        }
      }
      else {
        throw new UpdateException("$func not exists in $filename");
      }
    }
    else {
      throw new UpdateException("$n should be numeric, but it's not when updating $func");
    }
  }
  else{
    throw new UpdateException("No civicrm installed / initialized. when updating $func");
  }
  throw new UpdateException("Unknow error when updating $func");
}

/**
 * refs #31657, First update function for drupal 9.
 *
 * Only for test propose
 */
function neticrm_update_update_9300() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #32446, civicmr_log modified id FK on delete null
 */
function neticrm_update_update_9301() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #32894, add multiple field index to improve performance
 */
function neticrm_update_update_9302() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #32503, increase civicrm_msg_tempalte msg_html / msg_text length
 */
function neticrm_update_update_9303() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #32503, add order_number into civicrm_contribution_taiwanach
 */
function neticrm_update_update_9304() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #33859, add bounce pattern for Relay type.
 */
function neticrm_update_update_9305() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #33948, add transactional email related db fields
 *
 * Add is_hidden field to contribution page, add activity types for transactional email
 * Add default hidden mailing for transactional email. Add a default job for that mailing.
 */
function neticrm_update_update_9306() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #35271, update allpay, instrument add id and primary
 */
function neticrm_update_update_9307() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #34836, Update extends enum for recur in civicrm_custom_group
 */
function neticrm_update_update_9308() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #30350, update mcrypt to VER2(openssl)
 */
function neticrm_update_update_9309() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #34844, add index for url search
 */
function neticrm_update_update_9310() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #37730, Create aicompletion table
 */
function neticrm_update_update_9311() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #37300, Add new pcp status draft
 */
function neticrm_update_update_9312() {
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #37017, Change of pcp message template
 */
function neticrm_update_update_9313() {
  \Drupal::moduleHandler()->loadInclude('civicrm_demo', 'inc', 'civicrm_demo.utils');
  return neticrm_update_load_include(__FUNCTION__);
}

/**
 * refs #39632, add sync fields to 'civicrm_group' and add new SMS provider 'Flydove'
 */
function neticrm_update_update_9314() {
  return neticrm_update_load_include(__FUNCTION__);
}