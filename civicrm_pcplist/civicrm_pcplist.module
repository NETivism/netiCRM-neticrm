<?php

/**
 * Implementation of hook_menu()
 */
function civicrm_pcplist_menu(){
  return array(
    'civicrm/pcplist/%' => array(
      'title'            => 'Personal Campaign Page',
      'access arguments' => array('make online contributions'),
      'page callback' => 'civicrm_pcplist_page',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'weight' => 0,
    ),
  );
}

/**
 * Implementation of hook_theme();
 */
function civicrm_pcplist_theme(){
  return array(
   'civicrm_pcplist_item' => array(
      'arguments' => array('data' => NULL),
      'template' => 'civicrm_pcplist_item',
    ),
   'civicrm_pcplist' => array(
      'arguments' => array('items' => NULL),
      'template' => 'civicrm_pcplist',
    ),
  );
}

function civicrm_pcplist_page($contribution_page_id){
  civicrm_initialize( );
  require_once "CRM/Core/DAO.php";
  require_once 'CRM/Contribute/BAO/PCP.php';

  if(is_numeric($contribution_page_id)){
    // limited by contribution id
    $where = " AND p.contribution_page_id = $contribution_page_id ";

    // set title
    require_once 'CRM/Contribute/DAO/ContributionPage.php';
    $contrib_page =& new CRM_Contribute_DAO_ContributionPage();
    $contrib_page->id = $contribution_page_id;
    if ( $contrib_page->find( true ) ) { 
      drupal_set_title($contrib_page->title. ' - ' . t('Personal Campaign Page'));
    }   
    else{
      // 404
      drupal_not_found();
      return;
    }
  }
  $sql = "SELECT p.id, p.contact_id, p.title, p.intro_text, p.donate_link_text, p.contribution_page_id, p.goal_amount, SUM(cc.total_amount) as achieved_amount, COUNT(cc.total_amount) as contribution_count 
  FROM civicrm_pcp p LEFT JOIN civicrm_contribution_soft cs ON (p.id = cs.pcp_id) LEFT JOIN civicrm_contribution cc ON (cs.contribution_id = cc.id) 
  WHERE p.status_id = 2 AND p.is_active = 1 AND (cc.is_test = 0 OR cc.is_test IS NULL) AND (cc.contribution_status_id = 1 OR cc.contribution_status_id IS NULL)".$where ." GROUP BY p.id ORDER BY p.id DESC";
  //$count_sql = "SELECT COUNT(*) FROM civicrm_pcp WHERE status_id = 2 AND is_active = 1".$where;

  $rows = CRM_Core_DAO::executeQuery($sql);
  while($rows->fetch()){
    $data = array();
    $data['pcp_id'] = $rows->id;
    $data['contact_id'] = $rows->contact_id;
    $data['title'] = $rows->title;
    $data['intro_text'] = $rows->intro_text;
    $data['donate_link_text'] = $rows->donate_link_text;
    $data['donate_link_url'] = CRM_Utils_System::url('civicrm/contribute/transact', "id={$rows->contribution_page_id}&pcpId={$rows->id}&reset=1", true, null, true, true);
    $data['contribution_page_id '] = $rows->contribution_page_id;
    $data['goal_amount'] = round($rows->goal_amount);
    $data['achieved_amount'] = round($rows->achieved_amount);
    $data['contribution_count'] = $rows->contribution_count;
    $data['achieved_percentage'] = round(($data['achieved_amount'] / $data['goal_amount'] ) * 100) . '%';
    $data['view_url'] = CRM_Utils_System::url('civicrm/contribute/pcp/info', 'reset=1&id='.$data['pcp_id'], true, null, true, true);
    $data['contribution_link'] = l($data['donate_link_text'], 'civicrm/contribute/transact', array('query' => "id={$rows->contribution_page_id}&pcpId={$rows->id}&reset=1", 'absolute' => TRUE) );

    if ( $file_id = CRM_Core_DAO::getFieldValue('CRM_Core_DAO_EntityFile', $rows->id , 'file_id', 'entity_id') ) {
      $data['image_src'] = CRM_Utils_System::url( 'civicrm/file', "reset=1&id=$file_id&eid=$rows->id"); 
    }
    $output .= theme("civicrm_pcplist_item", $data);
  }
  //$pager = _civicrm_pcplist_pager($count_sql);
  drupal_add_css(drupal_get_path('module', 'civicrm_pcplist')."/civicrm_pcplist.css");
  return theme("civicrm_pcplist", $output);
}

function _civicrm_pcplist_pager($query) {
  require_once 'CRM/Utils/Pager.php';

  $params['csvString']    = null;
  $params['buttonTop']    = 'PagerTopButton';
  $params['buttonBottom'] = 'PagerBottomButton';
  $params['rowCount']     = CRM_Utils_Pager::PAGE_ROWCOUNT;
  if ( ! $params['rowCount'] ) {
      $params['rowCount'] = CRM_Utils_Pager::ROWCOUNT;
  }
  $result = CRM_Core_DAO::executeQuery( $query );
  $result->fetch();
  $params['total'] = $result->count;
  return new CRM_Utils_Pager( $params );
}

function template_preprocess_civicrm_pcplist_item(&$vars, $hook) {
  foreach($vars['data'] as $k => $v){
    $vars[$k] = $v;
  }
  if(!$vars['image_src']){
    $vars['image_src'] = '/sites/default/files/imagecache/news_thumb/imagefield_default_images/news_default.gif';
  }
}

function template_preprocess_civicrm_pcplist(&$vars, $hook) {
}
