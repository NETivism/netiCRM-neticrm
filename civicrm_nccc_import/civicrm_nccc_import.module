<?php

/**
 * Implementation of hook_menu().
 */

function civicrm_nccc_import_menu(){
  return array(
    'civicrm/nccc_import' => array(
      'title' => 'NCCC VPOS data import',
      'access arguments' => array('import nccc contribution'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('civicrm_nccc_import_form'),
      'type' => MENU_CALLBACK,
    )
  );
}

function civicrm_nccc_import_perm(){
  return array('import nccc contribution');
}

function civicrm_nccc_import_form($form_state){
  if(isset($_SESSION['nccc_import']) && (!empty($_SESSION['nccc_import']['imported']) || !empty($_SESSION['nccc_import']['skipped'])) ){
    // step 3
    if(!empty($_SESSION['nccc_import']['imported'])) {
      $form['imported'] = array(
        '#value' => '<h3>'.t('Imported record').'</h3><pre>'.$_SESSION['nccc_import']['imported'].'</pre>',
      );
    }
    if(!empty($_SESSION['nccc_import']['skipped'])) {
      $form['skipped'] = array(
        '#type' => 'textarea',
        '#title' => t('Skipped record'),
        '#default_value' => $_SESSION['nccc_import']['skipped'],
        '#prefix' => '<div style="font-family:font-family:\'Courier New\',Courier,monospace;">',
        '#suffix' => '</div>',
      );	
    }

    // submit form
    $form['step'] = array(
      '#type' => 'hidden',
      '#value' => 3,
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Done'),
    ); 
    return $form;
  }
  elseif(isset($_SESSION['nccc_import']) && !empty($_SESSION['nccc_import']['data'])){
    // step 2
    $parsed =& $_SESSION['nccc_import']['data'];

    // validate if contact exists
    foreach($parsed as $l => $r){
      $status = 0;
      $found = $status = '';
      // skip saved record
      $params = array(
        'invoice_id' => $r['#invoice_id'],
        'version' => 3,
      );
      $c = civicrm_api('contribution', 'get', $params);
      if(count($c['values'])){
        $contribution = reset($c['values']);
        // contribution alwready exists
        $found = t('Duplicate contribution <a href="!clink" target="_blank">!cid</a>', array('!clink'=> url('civicrm/contact/view/contribution', array('query' => "reset=1&id={$c['id']}&cid={$contribution['contact_id']}&action=view")), '!cid' => $c['id']));
        $status = 1;
      }
      else{
        $params = array(
          'external_identifier' => $r['#external_identifier'],
          'version' => 3,
        );
        $c = civicrm_api('contact', 'get', $params);
        if(empty($c['values'])){
          // not found
          $found = t('Contact not found.<br />Would you like <a href="!crmadd" target="_blank">add one</a> with external ID !ext.', array('!crmadd' => url('civicrm/contact/add', array('query' => 'reset=1&ct=Individual&external_id='.$r['#external_identifier'])), '!ext' => $r['#external_identifier']));
          $status = 2;
        }
        else{
          // we always should have 1 record
          $contact = reset($c['values']);
          $found = t('Ready');
          $status = 0;
          $contact_id = $contact['contact_id'];
        }
      }
      $found = array(
        '#contact_id' => $contact_id,
        'status' => $status,
        'msg' => $found,
      );
      $found += $parsed[$l];
      $parsed[$l] = $found;
    }
    $js = '$(document).ready(function(){
      $("#import-table tbody tr").each(function(){
        $(this).find("td:first").each(function(){
          if($(this).text() != "0"){
            $(this).parent().css("background", "#FFDFDF");
            $(this).next().css("color", "red");
          }
        });
      });
    });';
    drupal_add_js($js, 'inline', 'footer');
    $header = array(
      t('Status'),
      t('Message'),
      t('Store num'),
      t('Machine id'),
      t('Card'),
      t('Amount'),
      t('Auth Code'),
      '--',
      t('Date'),
      t('Valid Date'),
      t('Note'),
      '--',
    );
    $data = $parsed;
    foreach($data as $k => $v){
      foreach($v as $kk => $vv){
        if($kk[0] == '#'){
          unset($data[$k][$kk]);
        }
      }
    }
    $form['body_parsed'] = array(
      '#value' => '<div id="import-table">'.theme('table', $header, $data).'</div>',
    );
    $form['step'] = array(
      '#type' => 'hidden',
      '#value' => 2,
    );
    $form['submit'] = array(
      '#prefix' => '<div class="container-inline">',
      '#type' => 'submit',
      '#value' => t('Import'),
      '#attributes' => array('onclick' => 'confirm("'.t('Are you sure you want to continue? We will ignore line with errors(marked as red.)').'")'),
    ); 
    $form['cancel'] = array(
      '#type' => 'submit',
      '#value' => t('Cancel'),
      '#suffix' => '</div>',
    ); 
    return $form;
  }
  elseif(isset($_SESSION['nccc_import']) && !empty($_SESSION['nccc_import']['body'])){
    $body_default = $_SESSION['nccc_import']['body'];
  }
  else{
    $body_default = '';
  }

  // reset to step 1
  unset($_SESSION['nccc_import']);

  // text area form
  $form['body'] = array(
    '#type' => 'textarea',
    '#title' => t('Donation Data'),
    '#required' => TRUE,
    '#description' => t('Please paste nccc VPOS export txt data.'),
    '#default_value' => $body_default,
    '#prefix' => '<div style="font-family:font-family:\'Courier New\',Courier,monospace;">',
    '#suffix' => '</div>',
  );	
  $form['step'] = array(
    '#type' => 'hidden',
    '#value' => 1,
  );

  // submit form
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Verify data'),
  ); 

  return $form;
}


function civicrm_nccc_import_form_validate($form, &$form_state){
  // Initialize the number of donation
  $donation_count = 0;

  $strdata = $form_state['values']['body'];
  $strdata = trim($strdata, "\r\n");
  $separator = "\r\n";
  $line = strtok($strdata, $separator);

  while ($line !== false) {
    $donation_count++;
    
    // Each line should be at least 120 digit
    if (strlen($line)<120){
      form_set_error('body', t('Wrong format at column !column , line: !line', array('!column' => '#1', '!line' => $line)));
    }

    // nccc acount is always the same
    $strCheck = substr($line, 0, 10); // 荒野帳號
    //dpm($strCheck);
    $ncccact = "0125001976";
    if ($strCheck != $ncccact){
      form_set_error('body', t('Wrong format at column !column , line: !line', array('!column' => '#2', '!line' => $line)));
    }		

    // There are 3 zeros after credit card number
    $strCheck = substr($line, 34, 3); // should be 3 zero   
    //dpm($strCheck);
    if ($strCheck != "000"){
      form_set_error('body', t('Wrong format at column !column , line: !line', array('!column' => '#3', '!line' => $line)));
    }

    // there are 8 empty digit after donation amount
    $strCheck = substr($line, 45, 8); // the 8 digit is empty   
    //dpm($strCheck);
    if ($strCheck != "        "){
      form_set_error('body', t('Wrong format at column !column , line: !line', array('!column' => '#4', '!line' => $line)));
    }

    // the 2 digit is either 00 or 01 [00一般交易 01退貨]
    $strCheck = substr($line, 53, 2); // should be 00 or 01   
    if (!($strCheck = "00" || $strCheck = "01")){
      form_set_error('body', t('Wrong format at column !column , line: !line', array('!column' => '#5', '!line' => $line)));
    }

    // There are 31 empty digit
    $strCheck = substr($line, 65, 31); 
    if ($strCheck != "                               "){
      form_set_error('body', t('Wrong format at column !column , line: !line', array('!column' => '#6', '!line' => $line)));
    }

    // 6 empty digit
    $strCheck = substr($line, 112, 6); 
    if ($strCheck != "      "){
      form_set_error('body', t('Wrong format at column !column , line: !line', array('!column' => '#7', '!line' => $line)));
    }

    // The last 2 digit is 02
    $strCheck = substr($line, strlen($line)-2, 2); 
    //dpm($strCheck);
    if ($strCheck != "02"){
      form_set_error('body', t('Wrong format at column !column , line: !line', array('!column' => '#8', '!line' => $line)));
    }

    // Get next line 
    $line = strtok( $separator );
  } // end while	
}


function civicrm_nccc_import_form_submit($form, &$form_state){
  if($form_state['values']['op'] == t('Cancel')){
    $body = $_SESSION['nccc_import']['body'];
    unset($_SESSION['nccc_import']);
    $_SESSION['nccc_import'] = array(
      'body' => $body,
    );
    return;
  }

  civicrm_initialize();
  if($form_state['values']['step'] == 3){
    unset($_SESSION['nccc_import']);
    return;
  }
  elseif($form_state['values']['step'] == 2){
    if($form_state['values']['op'] == t('Import')){
      $instrument = variable_get('civicrm_nccc_import_instrument', 8);
      $contribution_type = variable_get('civicrm_nccc_import_contribution_type', 1);

      foreach($_SESSION['nccc_import']['data'] as $line => $d){
        if($d['status'] !== 0){
          $_SESSION['nccc_import']['skipped'] .= $d['#origin']."\n";
        }
        else{
          // import contribution
          $params = array( 
            'contact_id' => $d['#contact_id'],
            'receive_date' => '20'.ltrim($d['delidate'], '20'), // only for this centry
            'total_amount' => $d['amount'],
            'contribution_type_id' => $contribution_type,
            'payment_instrument_id' => $instrument,
            'invoice_id' => $d['#invoice_id'],
            'source' => 'NCCC txt',
            'contribution_status_id' => 1,
            'version' => 3,
          );

          $r = civicrm_api( 'contribution','create', $params);
          if(!empty($r['id'])){
            // imported
            $_SESSION['nccc_import']['imported'] .= $d['#origin']."\n";
          }
          else{
            // something wrong
            $_SESSION['nccc_import']['skipped'] .= $d['#origin']." #".$r['is_error']."\n";
          }
        }
      }
      unset($_SESSION['nccc_import']['data']);
      return;
    }
  }
  else{
    $_SESSION['nccc_import']['body'] = $form_state['values']['body'];
    $parsed = civicrm_nccc_parse($form_state['values']['body']);
    $_SESSION['nccc_import']['data'] = $parsed;
  
    // go to next step
    return true;
  }
}

/**
 * Parse Donation Data into 2-D array
   input: txt file
   output: 2-D array
   x = 1, 2, 3,.....
   array[x][sow]  荒野帳號   
   array[x][sid]    端末機代號: 商家代號
   array[x][cardno]   信用卡號
   array[x][amount]   捐款金額
   array[x][authcode]   授權碼   <----資料中都是空格，有需要此維陣列嗎?
   array[x][type]   交易種類: 00一般交易  01退貨
   array[x][delidate]   送件日期
   array[x][valdate]   有效日期
   array[x][note]   備註
 */
function civicrm_nccc_parse($str) {
  // Initialize the number of donation
  $c = 0;

  // Get the first line
  $separator = "\r\n";
  $line = strtok($str, $separator);
  $centry = substr(date('Y'), 0, 2);

  while ($line !== false) {
    $c++;
    $d[$c]['#origin'] = $line;

    $d[$c]['sow'] = substr($line, 0, 10); // 荒野帳號
    $line = substr($line, 10); // remaining data

    $d[$c]['sid'] = substr($line, 0, 8); // 端末機代號: 商家代號
    $line = substr($line, 8); // remaining data

    $d[$c]['cardno'] = substr($line, 0, 16); // 信用卡號
    $line = substr($line, 19); // remaining data

    $d[$c]['amount'] = intval(substr($line, 0, 8)); // 捐款金額
    $line = substr($line, 8); // remaining data

    $d[$c]['authcode'] = substr($line, 0, 8); // 授權碼
    $line = substr($line, 8); // remaining data

    $d[$c]['type'] = substr($line, 0, 2); // 交易種類: 00一般交易  01退貨 02交易補登
    $line = substr($line, 2); // remaining data

    $d[$c]['delidate'] = $centry.substr($line, 0, 6); // 送件日期
    $line = substr($line, 6); // remaining data

    $d[$c]['valdate'] = substr($line, 0, 4); // 有效日期
    $line = substr($line, 35); // remaining data 又空了31格

    $d[$c]['note'] = substr($line, 0, 16); // 備註

    $d[$c]['end'] = substr($line, strlen($line)-2, 2); // 最後兩碼 02

    if(!empty($d[$c]['cardno']) && !empty($d[$c]['note'])){
      $d[$c]['#external_identifier'] = hash("crc32b", $d[$c]['cardno'].$d[$c]['note']);
      if(!empty($d[$c]['amount']) && !empty($d[$c]['delidate']) && !empty($d[$c]['authcode'])){
        $d[$c]['#invoice_id'] = md5($d[$c]['cardno'].$d[$c]['authcode'].$d[$c]['amount'].$d[$c]['delidate']);
      }
    }

    // Get next line 
    $line = strtok( $separator );
  } // end while	

  return $d;
}
